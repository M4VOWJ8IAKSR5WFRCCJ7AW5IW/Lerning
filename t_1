
fileName = "STKEY_99NightInTheForest.txt"
EexpireTime_Key = 8

HttpService = game:GetService("HttpService")
local function formatTime(seconds)
    days = math.floor(seconds / 86400)
    hours = math.floor((seconds % 86400) / 3600)
    minutes = math.floor((seconds % 3600) / 60)
    secs = seconds % 60
    return days, hours, minutes, secs
end

local function format_ExpireTimeKey(days, hours, minutes, secs)
	days_show, hours_show, minutes_show, secs_show, Resut_show = "error","error","error","error","error";
	pcall(function()
		if days == 0 then days_show = "" else days_show = days.." ‡∏ß‡∏±‡∏ô " end;
		if hours == 0 then hours_show = "" else	hours_show = hours.." ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á "	end;
		if minutes == 0 then minutes_show = "" else	minutes_show = minutes.." ‡∏ô‡∏≤‡∏ó‡∏µ " end;
		if secs == 0 then secs_show = "" else secs_show = secs.." ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ " end;
	end)
	Resut_show = days_show..hours_show..minutes_show..secs_show
	return Resut_show
end

-- üìù ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å key ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
local function saveKey(Script_Key)
    expireTime = os.time() + (EexpireTime_Key * 3600)
    saveData = {
        key = Script_Key,
        expireTime = expireTime
    }
    if not isfolder("ST_Keys") then
        makefolder("ST_Keys")
    end
    writefile("ST_Keys/"..fileName..".txt", HttpService:JSONEncode(saveData))
    getgenv().Somtank_ExpireTimeKey = expireTime
end

-- üìÇ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î key + ‡πÄ‡∏ß‡∏•‡∏≤ expire
local function loadKey()
	if isfolder("ST_Keys") and isfile("ST_Keys/"..fileName..".txt") then
		data = HttpService:JSONDecode(readfile("ST_Keys/"..fileName..".txt"))
		getgenv().Somtank_ExpireTimeKey = data.expireTime
		return data.key, data.expireTime
	end
	return nil
end

ScreenGui = Instance.new("ScreenGui");Frame = Instance.new("Frame");UICorner = Instance.new("UICorner");UIGradient = Instance.new("UIGradient");GetKeyFrame = Instance.new("Frame");GetLinkButton = Instance.new("TextButton");UICorner_2 = Instance.new("UICorner");UIGradient_2 = Instance.new("UIGradient");GetKeyFrame_2 = Instance.new("Frame");GetLinkButton_2 = Instance.new("TextButton");UICorner_3 = Instance.new("UICorner");UIGradient_3 = Instance.new("UIGradient");KeyPlace = Instance.new("Frame");TextBox = Instance.new("TextBox");UICorner_4 = Instance.new("UICorner");UIGradient_4 = Instance.new("UIGradient");TextLabel = Instance.new("TextLabel");ShopFrame = Instance.new("Frame");UICorner_5 = Instance.new("UICorner");TextLabel_2 = Instance.new("TextLabel");Slide_Image = Instance.new("ImageLabel");UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint");UICorner_6 = Instance.new("UICorner");GetWebFrame = Instance.new("Frame");GetLinkButton_3 = Instance.new("TextButton");UICorner_7 = Instance.new("UICorner");UIGradient_5 = Instance.new("UIGradient");GetDiscordFrame = Instance.new("Frame");GetLinkButton_4 = Instance.new("TextButton");UICorner_8 = Instance.new("UICorner");UIGradient_6 = Instance.new("UIGradient");ScriptFrame = Instance.new("Frame");UICorner_9 = Instance.new("UICorner");Map_Image = Instance.new("ImageLabel");UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint");UICorner_10 = Instance.new("UICorner");TextLabel_Map_name = Instance.new("TextLabel");stats_TextLabel_ping = Instance.new("TextLabel");stats_TextLabel_Players = Instance.new("TextLabel");stats_TextLabel_Fps = Instance.new("TextLabel")

ScreenGui.Name = string.gsub(string.char(math.random(65,90),math.random(65,90))..math.random(1000,9999),"%s","")
ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

if getgenv().GetKeyUI_Somtank then
	getgenv().GetKeyUI_Somtank:Destroy()
	getgenv().GetKeyUI_Somtank = ScreenGui
else
	getgenv().GetKeyUI_Somtank = ScreenGui
end
if getgenv().BlurPartFrame then
	getgenv().BlurPartFrame:Destroy()
end

task.spawn(function()
	pcall(function()
		MakeThisFrame = Frame
		Lighting          = game:GetService("Lighting")
		camera			= workspace.CurrentCamera
		BLUR_SIZE         = Vector2.new(10, 10)
		PART_SIZE         = 0.01
		PART_TRANSPARENCY = 1 - 1e-7
		START_INTENSITY	= 0.25
		MakeThisFrame:SetAttribute("BlurIntensity", START_INTENSITY)
		BLUR_OBJ          = Instance.new("DepthOfFieldEffect")
		BLUR_OBJ.FarIntensity   = 0
		BLUR_OBJ.NearIntensity  = MakeThisFrame:GetAttribute("BlurIntensity")
		BLUR_OBJ.FocusDistance  = 0.25
		BLUR_OBJ.InFocusRadius  = 0
		BLUR_OBJ.Parent         = Lighting
		PartsList         = {}
		BlursList         = {}
		BlurObjects       = {}
		BlurredGui        = {}
		BlurredGui.__index      = BlurredGui
		function rayPlaneIntersect(planePos, planeNormal, rayOrigin, rayDirection)
			n = planeNormal
			d = rayDirection
			v = rayOrigin - planePos
			num = n.x*v.x + n.y*v.y + n.z*v.z
			den = n.x*d.x + n.y*d.y + n.z*d.z
			a = -num / den
			return rayOrigin + a * rayDirection, a
		end
		function rebuildPartsList()
			PartsList = {}
			BlursList = {}
			for blurObj, part in pairs(BlurObjects) do
				table.insert(PartsList, part)
				table.insert(BlursList, blurObj)
			end
		end
		function BlurredGui.new(frame, shape)
			local blurPart        = Instance.new("Part")
			blurPart.Size         = Vector3.new(1, 1, 1) * 0.01
			blurPart.Anchored     = true
			blurPart.CanCollide   = false
			blurPart.CanTouch     = false
			blurPart.Material     = Enum.Material.Glass
			blurPart.Transparency = PART_TRANSPARENCY
			blurPart.Parent       = workspace.CurrentCamera
			local mesh
			if (shape == "Rectangle") then
				mesh        = Instance.new("BlockMesh")
				mesh.Parent = blurPart
			elseif (shape == "Oval") then
				mesh          = Instance.new("SpecialMesh")
				mesh.MeshType = Enum.MeshType.Sphere
				mesh.Parent   = blurPart
			end
			ignoreInset = false
			currentObj  = frame
			while true do
				currentObj = currentObj.Parent

				if (currentObj and currentObj:IsA("ScreenGui")) then
					ignoreInset = currentObj.IgnoreGuiInset
					break
				elseif (currentObj == nil) then
					break
				end
			end
			new = setmetatable({
				Frame          = frame;
				Part           = blurPart;
				Mesh           = mesh;
				IgnoreGuiInset = ignoreInset;
			}, BlurredGui)
			BlurObjects[new] = blurPart
			rebuildPartsList()
			game:GetService("RunService"):BindToRenderStep("...", Enum.RenderPriority.Camera.Value + 1, function()				
				getgenv().BlurPartFrame = blurPart
				blurPart.CFrame = camera.CFrame * CFrame.new(0,0,0)
				BlurredGui.updateAll()				
			end)
			return new
		end
		function updateGui(blurObj)
			if (not blurObj.Frame.Visible) then
				blurObj.Part.Transparency = 1
				return
			end
			camera = workspace.CurrentCamera
			frame  = blurObj.Frame
			part   = blurObj.Part
			mesh   = blurObj.Mesh
			part.Transparency = PART_TRANSPARENCY
			corner0 = frame.AbsolutePosition + BLUR_SIZE
			corner1 = corner0 + frame.AbsoluteSize - BLUR_SIZE*2
			local ray0, ray1
			if (blurObj.IgnoreGuiInset) then
				ray0 = camera:ViewportPointToRay(corner0.X, corner0.Y, 1)
				ray1 = camera:ViewportPointToRay(corner1.X, corner1.Y, 1)
			else
				ray0 = camera:ScreenPointToRay(corner0.X, corner0.Y, 1)
				ray1 = camera:ScreenPointToRay(corner1.X, corner1.Y, 1)
			end
			planeOrigin = camera.CFrame.Position + camera.CFrame.LookVector * (0.05 - camera.NearPlaneZ)
			planeNormal = camera.CFrame.LookVector
			pos0 = rayPlaneIntersect(planeOrigin, planeNormal, ray0.Origin, ray0.Direction)
			pos1 = rayPlaneIntersect(planeOrigin, planeNormal, ray1.Origin, ray1.Direction)
			pos0 = camera.CFrame:PointToObjectSpace(pos0)
			pos1 = camera.CFrame:PointToObjectSpace(pos1)
			size   = pos1 - pos0
			center = (pos0 + pos1)/2
			mesh.Offset = center
			mesh.Scale  = size / PART_SIZE
		end
		function BlurredGui.updateAll()
			BLUR_OBJ.NearIntensity = tonumber(MakeThisFrame:GetAttribute("BlurIntensity"))
			for i = 1, #BlursList do
				updateGui(BlursList[i])
			end
			cframes = table.create(#BlursList, workspace.CurrentCamera.CFrame)
			workspace:BulkMoveTo(PartsList, cframes, Enum.BulkMoveMode.FireCFrameChanged)
			BLUR_OBJ.FocusDistance = 0.25 - camera.NearPlaneZ
		end
		BlurredGui.new(MakeThisFrame, "Rectangle")
		BlurredGui.updateAll()
		return BlurredGui
	end)
end)

local a=2^32;local b=a-1;local function c(d,e)local f,g=0,1;while d~=0 or e~=0 do local h,i=d%2,e%2;local j=(h+i)%2;f=f+j*g;d=math.floor(d/2)e=math.floor(e/2)g=g*2 end;return f%a end;local function k(d,e,l,...)local m;if e then d=d%a;e=e%a;m=c(d,e)if l then m=k(m,l,...)end;return m elseif d then return d%a else return 0 end end;local function n(d,e,l,...)local m;if e then d=d%a;e=e%a;m=(d+e-c(d,e))/2;if l then m=n(m,l,...)end;return m elseif d then return d%a else return b end end;local function o(p)return b-p end;local function q(d,r)if r<0 then return lshift(d,-r)end;return math.floor(d%2^32/2^r)end;local function s(p,r)if r>31 or r<-31 then return 0 end;return q(p%a,r)end;local function lshift(d,r)if r<0 then return s(d,-r)end;return d*2^r%2^32 end;local function t(p,r)p=p%a;r=r%32;local u=n(p,2^r-1)return s(p,r)+lshift(u,32-r)end;local v={0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5,0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5,0xd807aa98,0x12835b01,0x243185be,0x550c7dc3,0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174,0xe49b69c1,0xefbe4786,0x0fc19dc6,0x240ca1cc,0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da,0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7,0xc6e00bf3,0xd5a79147,0x06ca6351,0x14292967,0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13,0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85,0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3,0xd192e819,0xd6990624,0xf40e3585,0x106aa070,0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5,0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3,0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208,0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2}local function w(x)return string.gsub(x,".",function(l)return string.format("%02x",string.byte(l))end)end;local function y(z,A)local x=""for B=1,A do local C=z%256;x=string.char(C)..x;z=(z-C)/256 end;return x end;local function D(x,B)local A=0;for B=B,B+3 do A=A*256+string.byte(x,B)end;return A end;local function E(F,G)local H=64-(G+9)%64;G=y(8*G,8)F=F.."\128"..string.rep("\0",H)..G;assert(#F%64==0)return F end;local function I(J)J[1]=0x6a09e667;J[2]=0xbb67ae85;J[3]=0x3c6ef372;J[4]=0xa54ff53a;J[5]=0x510e527f;J[6]=0x9b05688c;J[7]=0x1f83d9ab;J[8]=0x5be0cd19;return J end;local function K(F,B,J)local L={}for M=1,16 do L[M]=D(F,B+(M-1)*4)end;for M=17,64 do local N=L[M-15]local O=k(t(N,7),t(N,18),s(N,3))N=L[M-2]L[M]=(L[M-16]+O+L[M-7]+k(t(N,17),t(N,19),s(N,10)))%a end;local d,e,l,P,Q,R,S,T=J[1],J[2],J[3],J[4],J[5],J[6],J[7],J[8]for B=1,64 do local O=k(t(d,2),t(d,13),t(d,22))local U=k(n(d,e),n(d,l),n(e,l))local V=(O+U)%a;local W=k(t(Q,6),t(Q,11),t(Q,25))local X=k(n(Q,R),n(o(Q),S))local Y=(T+W+X+v[B]+L[B])%a;T=S;S=R;R=Q;Q=(P+Y)%a;P=l;l=e;e=d;d=(Y+V)%a end;J[1]=(J[1]+d)%a;J[2]=(J[2]+e)%a;J[3]=(J[3]+l)%a;J[4]=(J[4]+P)%a;J[5]=(J[5]+Q)%a;J[6]=(J[6]+R)%a;J[7]=(J[7]+S)%a;J[8]=(J[8]+T)%a end;local function Z(F)F=E(F,#F)local J=I({})for B=1,#F,64 do K(F,B,J)end;return w(y(J[1],4)..y(J[2],4)..y(J[3],4)..y(J[4],4)..y(J[5],4)..y(J[6],4)..y(J[7],4)..y(J[8],4))end;local e;local l={["\\"]="\\",["\""]="\"",["\b"]="b",["\f"]="f",["\n"]="n",["\r"]="r",["\t"]="t"}local P={["/"]="/"}for Q,R in pairs(l)do P[R]=Q end;local S=function(T)return"\\"..(l[T]or string.format("u%04x",T:byte()))end;local B=function(M)return"null"end;local v=function(M,z)local _={}z=z or{}if z[M]then error("circular reference")end;z[M]=true;if rawget(M,1)~=nil or next(M)==nil then local A=0;for Q in pairs(M)do if type(Q)~="number"then error("invalid table: mixed or invalid key types")end;A=A+1 end;if A~=#M then error("invalid table: sparse array")end;for a0,R in ipairs(M)do table.insert(_,e(R,z))end;z[M]=nil;return"["..table.concat(_,",").."]"else for Q,R in pairs(M)do if type(Q)~="string"then error("invalid table: mixed or invalid key types")end;table.insert(_,e(Q,z)..":"..e(R,z))end;z[M]=nil;return"{"..table.concat(_,",").."}"end end;local g=function(M)return'"'..M:gsub('[%z\1-\31\\"]',S)..'"'end;local a1=function(M)if M~=M or M<=-math.huge or M>=math.huge then error("unexpected number value '"..tostring(M).."'")end;return string.format("%.14g",M)end;local j={["nil"]=B,["table"]=v,["string"]=g,["number"]=a1,["boolean"]=tostring}e=function(M,z)local x=type(M)local a2=j[x]if a2 then return a2(M,z)end;error("unexpected type '"..x.."'")end;local a3=function(M)return e(M)end;local a4;local N=function(...)local _={}for a0=1,select("#",...)do _[select(a0,...)]=true end;return _ end;local L=N(" ","\t","\r","\n")local p=N(" ","\t","\r","\n","]","}",",")local a5=N("\\","/",'"',"b","f","n","r","t","u")local m=N("true","false","null")local a6={["true"]=true,["false"]=false,["null"]=nil}local a7=function(a8,a9,aa,ab)for a0=a9,#a8 do if aa[a8:sub(a0,a0)]~=ab then return a0 end end;return#a8+1 end;local ac=function(a8,a9,J)local ad=1;local ae=1;for a0=1,a9-1 do ae=ae+1;if a8:sub(a0,a0)=="\n"then ad=ad+1;ae=1 end end;error(string.format("%s at line %d col %d",J,ad,ae))end;local af=function(A)local a2=math.floor;if A<=0x7f then return string.char(A)elseif A<=0x7ff then return string.char(a2(A/64)+192,A%64+128)elseif A<=0xffff then return string.char(a2(A/4096)+224,a2(A%4096/64)+128,A%64+128)elseif A<=0x10ffff then return string.char(a2(A/262144)+240,a2(A%262144/4096)+128,a2(A%4096/64)+128,A%64+128)end;error(string.format("invalid unicode codepoint '%x'",A))end;local ag=function(ah)local ai=tonumber(ah:sub(1,4),16)local aj=tonumber(ah:sub(7,10),16)if aj then return af((ai-0xd800)*0x400+aj-0xdc00+0x10000)else return af(ai)end end;local ak=function(a8,a0)local _=""local al=a0+1;local Q=al;while al<=#a8 do local am=a8:byte(al)if am<32 then ac(a8,al,"control character in string")elseif am==92 then _=_..a8:sub(Q,al-1)al=al+1;local T=a8:sub(al,al)if T=="u"then local an=a8:match("^[dD][89aAbB]%x%x\\u%x%x%x%x",al+1)or a8:match("^%x%x%x%x",al+1)or ac(a8,al-1,"invalid unicode escape in string")_=_..ag(an)al=al+#an else if not a5[T]then ac(a8,al-1,"invalid escape char '"..T.."' in string")end;_=_..P[T]end;Q=al+1 elseif am==34 then _=_..a8:sub(Q,al-1)return _,al+1 end;al=al+1 end;ac(a8,a0,"expected closing quote for string")end;local ao=function(a8,a0)local am=a7(a8,a0,p)local ah=a8:sub(a0,am-1)local A=tonumber(ah)if not A then ac(a8,a0,"invalid number '"..ah.."'")end;return A,am end;local ap=function(a8,a0)local am=a7(a8,a0,p)local aq=a8:sub(a0,am-1)if not m[aq]then ac(a8,a0,"invalid literal '"..aq.."'")end;return a6[aq],am end;local ar=function(a8,a0)local _={}local A=1;a0=a0+1;while 1 do local am;a0=a7(a8,a0,L,true)if a8:sub(a0,a0)=="]"then a0=a0+1;break end;am,a0=a4(a8,a0)_[A]=am;A=A+1;a0=a7(a8,a0,L,true)local as=a8:sub(a0,a0)a0=a0+1;if as=="]"then break end;if as~=","then ac(a8,a0,"expected ']' or ','")end end;return _,a0 end;local at=function(a8,a0)local _={}a0=a0+1;while 1 do local au,M;a0=a7(a8,a0,L,true)if a8:sub(a0,a0)=="}"then a0=a0+1;break end;if a8:sub(a0,a0)~='"'then ac(a8,a0,"expected string for key")end;au,a0=a4(a8,a0)a0=a7(a8,a0,L,true)if a8:sub(a0,a0)~=":"then ac(a8,a0,"expected ':' after key")end;a0=a7(a8,a0+1,L,true)M,a0=a4(a8,a0)_[au]=M;a0=a7(a8,a0,L,true)local as=a8:sub(a0,a0)a0=a0+1;if as=="}"then break end;if as~=","then ac(a8,a0,"expected '}' or ','")end end;return _,a0 end;local av={['"']=ak,["0"]=ao,["1"]=ao,["2"]=ao,["3"]=ao,["4"]=ao,["5"]=ao,["6"]=ao,["7"]=ao,["8"]=ao,["9"]=ao,["-"]=ao,["t"]=ap,["f"]=ap,["n"]=ap,["["]=ar,["{"]=at}a4=function(a8,a9)local as=a8:sub(a9,a9)local a2=av[as]if a2 then return a2(a8,a9)end;ac(a8,a9,"unexpected character '"..as.."'")end;local aw=function(a8)if type(a8)~="string"then error("expected argument of type string, got "..type(a8))end;local _,a9=a4(a8,a7(a8,1,L,true))a9=a7(a8,a9,L,true)if a9<=#a8 then ac(a8,a9,"trailing garbage")end;return _ end;
local lEncode, lDecode, lDigest, Key_Is_valid = a3, aw, Z, false;

local service = 5801;
local secret = "1506dbcd-c550-4824-a3f3-b267452247f5";
local useNonce = true;

local onMessage = function(message) end;
local requestSending = false;
local fSetClipboard, fRequest, fStringChar, fToString, fStringSub, fOsTime, fMathRandom, fMathFloor, fGetHwid = setclipboard or toclipboard, request or http_request or syn_request, string.char, tostring, string.sub, os.time, math.random, math.floor, gethwid or function() return game:GetService("Players").LocalPlayer.UserId end
local cachedLink, cachedTime = "", 0;
local host = "https://api.platoboost.app";
local hostResponse = fRequest({
    Url = host .. "/public/connectivity",
    Method = "GET"
});
if hostResponse.StatusCode ~= 200 or hostResponse.StatusCode ~= 429 then
    host = "https://api.platoboost.net";
end
function cacheLink()
    if cachedTime + (10*60) < fOsTime() then
        response = fRequest({
            Url = host .. "/public/start",
            Method = "POST",
            Body = lEncode({
                service = service,
                identifier = lDigest(fGetHwid())
            }),
            Headers = {
                ["Content-Type"] = "application/json"
            }
        });
        if response.StatusCode == 200 then
            decoded = lDecode(response.Body);
            if decoded.success == true then
                cachedLink = decoded.data.url;
                cachedTime = fOsTime();
                return true, cachedLink;
            else
                onMessage(decoded.message);
                return false, decoded.message;
            end
        elseif response.StatusCode == 429 then
            local msg = "you are being rate limited, please wait 20 seconds and try again.";
            onMessage(msg);
            return false, msg;
        end

        msg = "Failed to cache link.";
        onMessage(msg);
        return false, msg;
    else
        return true, cachedLink;
    end
end
cacheLink();
local generateNonce = function()
    str = ""
    for _ = 1, 16 do
        str = str .. fStringChar(fMathFloor(fMathRandom() * (122 - 97 + 1)) + 97)
    end
    return str
end
for _ = 1, 5 do
    oNonce = generateNonce();
    task.wait(0.2)
    if generateNonce() == oNonce then
        msg = "platoboost nonce error.";
        onMessage(msg);
        error(msg);
    end
end
local copyLink = function()
    success, link = cacheLink();    
    if success then
        fSetClipboard(link);
    end
end
local redeemKey = function(key)
    local nonce = generateNonce();
    local endpoint = host .. "/public/redeem/" .. fToString(service);
    body = {
        identifier = lDigest(fGetHwid()),
        key = key
    }
    if useNonce then
        body.nonce = nonce;
    end
    response = fRequest({
        Url = endpoint,
        Method = "POST",
        Body = lEncode(body),
        Headers = {
            ["Content-Type"] = "application/json"
        }
    });
    if response.StatusCode == 200 then
        decoded = lDecode(response.Body);
        if decoded.success == true then
            if decoded.data.valid == true then
                if useNonce then
                    if decoded.data.hash == lDigest("true" .. "-" .. nonce .. "-" .. secret) then
                        return true;
                    else
                        onMessage("failed to verify integrity.");
                        return false;
                    end    
                else
                    return true;
                end
            else
                onMessage("key is invalid.");
                return false;
            end
        else
            if fStringSub(decoded.message, 1, 27) == "unique constraint violation" then
                onMessage("you already have an active key, please wait for it to expire before redeeming it.");
                return false;
            else
                onMessage(decoded.message);
                return false;
            end
        end
    elseif response.StatusCode == 429 then
        onMessage("you are being rate limited, please wait 20 seconds and try again.");
        return false;
    else
        onMessage("server returned an invalid status code, please try again later.");
        return false; 
    end
end
local verifyKey = function(key)
    if requestSending == true then
        onMessage("a request is already being sent, please slow down.");
        return false;
    else
        requestSending = true;
    end
    local nonce = generateNonce();
    local endpoint = host .. "/public/whitelist/" .. fToString(service) .. "?identifier=" .. lDigest(fGetHwid()) .. "&key=" .. key;
    if useNonce then
        endpoint = endpoint .. "&nonce=" .. nonce;
    end
    local response = fRequest({
        Url = endpoint,
        Method = "GET",
    });
    requestSending = false;
    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded.success == true then
            if decoded.data.valid == true then
                if useNonce then
                    if decoded.data.hash == lDigest("true" .. "-" .. nonce .. "-" .. secret) then
                        return true;
                    else
                        onMessage("failed to verify integrity.");
                        return false;
                    end
                else
                    return true;
                end
            else
                if fStringSub(key, 1, 4) == "KEY_" then
                    return redeemKey(key);
                else
                    onMessage("key is invalid.");
                    return false;
                end
            end
        else
            onMessage(decoded.message);
            return false;
        end
    elseif response.StatusCode == 429 then
        onMessage("you are being rate limited, please wait 20 seconds and try again.");
        return false;
    else
        onMessage("server returned an invalid status code, please try again later.");
        return false;
    end
end
local getFlag = function(name)
    local nonce = generateNonce();
    local endpoint = host .. "/public/flag/" .. fToString(service) .. "?name=" .. name;
    if useNonce then
        endpoint = endpoint .. "&nonce=" .. nonce;
    end
    local response = fRequest({
        Url = endpoint,
        Method = "GET",
    });
    if response.StatusCode == 200 then
        local decoded = lDecode(response.Body);
        if decoded.success == true then
            if useNonce then
                if decoded.data.hash == lDigest(fToString(decoded.data.value) .. "-" .. nonce .. "-" .. secret) then
                    return decoded.data.value;
                else
                    onMessage("failed to verify integrity.");
                    return nil;
                end
            else
                return decoded.data.value;
            end
        else
            onMessage(decoded.message);
            return nil;
        end
    else
        return nil;
    end
end

SavedKey_Somtank, ExpireTimeKey = loadKey()
if SavedKey_Somtank and ExpireTimeKey then
	success = verifyKey(SavedKey_Somtank)
	if success then
		ScreenGui:Destroy()
		Key_Is_valid = true
		getgenv().BlurPartFrame:Destroy()
		pcall(function()
			diff = tonumber(ExpireTimeKey) - tonumber(os.time())
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ñ‡∏µ‡∏¢‡πå | ExpireTime",
				Text = "‚åõ "..format_ExpireTimeKey(formatTime(diff)),
				Duration = 8,
				Button1 = "Close | ‡∏õ‡∏¥‡∏î",
				Icon = "rbxassetid://91017172621419"
			})
		end)
	end
end

Frame.Parent = ScreenGui;Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255);Frame.BorderColor3 = Color3.fromRGB(0, 0, 0);Frame.BorderSizePixel = 0;Frame.Position = UDim2.new(0.240487069, 0, 0.162671238, 0);Frame.Size = UDim2.new(0, 681, 0, 393);Frame.BackgroundTransparency = 0.3;UICorner.CornerRadius = UDim.new(0, 12);UICorner.Parent = Frame;UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(83, 53, 118)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(22, 14, 31))};UIGradient.Rotation = -129;UIGradient.Parent = Frame;GetKeyFrame.Name = "GetKeyFrame";GetKeyFrame.Parent = Frame;GetKeyFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255);GetKeyFrame.BorderColor3 = Color3.fromRGB(0, 0, 0);GetKeyFrame.BorderSizePixel = 0;GetKeyFrame.Position = UDim2.new(0.0176837947, 0, 0.875633895, 0);GetKeyFrame.Size = UDim2.new(0, 180, 0, 36);GetLinkButton.Name = "GetLinkButton";GetLinkButton.Parent = GetKeyFrame;GetLinkButton.BackgroundColor3 = Color3.fromRGB(142, 85, 255);GetLinkButton.BackgroundTransparency = 1.000;GetLinkButton.BorderColor3 = Color3.fromRGB(0, 0, 0);GetLinkButton.BorderSizePixel = 0;GetLinkButton.Position = UDim2.new(0, 0, -0.0293426514, 0);GetLinkButton.Size = UDim2.new(1.01223481, 0, 1.05634904, 0);GetLinkButton.Font = Enum.Font.Highway;GetLinkButton.Text = "‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏´‡∏≤‡∏Ñ‡∏µ‡∏¢‡πå";GetLinkButton.TextColor3 = Color3.fromRGB(88, 48, 189);GetLinkButton.TextScaled = true;GetLinkButton.TextSize = 14.000;GetLinkButton.TextWrapped = true;UICorner_2.CornerRadius = UDim.new(0, 12);UICorner_2.Parent = GetKeyFrame;UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(90, 54, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(156, 90, 255))};UIGradient_2.Rotation = -79;UIGradient_2.Parent = GetKeyFrame;GetKeyFrame_2.Name = "GetKeyFrame";GetKeyFrame_2.Parent = Frame;GetKeyFrame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255);GetKeyFrame_2.BorderColor3 = Color3.fromRGB(0, 0, 0);GetKeyFrame_2.BorderSizePixel = 0;GetKeyFrame_2.Position = UDim2.new(0.301452458, 0, 0.878178477, 0);GetKeyFrame_2.Size = UDim2.new(0, 180, 0, 36);GetLinkButton_2.Name = "GetLinkButton";GetLinkButton_2.Parent = GetKeyFrame_2;GetLinkButton_2.BackgroundColor3 = Color3.fromRGB(142, 85, 255);GetLinkButton_2.BackgroundTransparency = 1.000;GetLinkButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0);GetLinkButton_2.BorderSizePixel = 0;GetLinkButton_2.Position = UDim2.new(-1.88838058e-05, 0, -0.0293426514, 0);GetLinkButton_2.Size = UDim2.new(1.0122354, 0, 1.05634904, 0);GetLinkButton_2.Font = Enum.Font.Highway;GetLinkButton_2.Text = "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå";GetLinkButton_2.TextColor3 = Color3.fromRGB(88, 48, 189);GetLinkButton_2.TextScaled = true;GetLinkButton_2.TextSize = 14.000;GetLinkButton_2.TextWrapped = true;UICorner_3.CornerRadius = UDim.new(0, 12);UICorner_3.Parent = GetKeyFrame_2;UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(90, 54, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(156, 90, 255))};UIGradient_3.Rotation = -79;UIGradient_3.Parent = GetKeyFrame_2;KeyPlace.Name = "KeyPlace";KeyPlace.Parent = Frame;KeyPlace.BackgroundColor3 = Color3.fromRGB(255, 255, 255);KeyPlace.BorderColor3 = Color3.fromRGB(0, 0, 0);KeyPlace.BorderSizePixel = 0;KeyPlace.Position = UDim2.new(0.0176835246, 0, 0.727412283, 0);KeyPlace.Size = UDim2.new(0, 376, 0, 40);TextBox.Parent = KeyPlace;TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255);TextBox.BackgroundTransparency = 1.000;TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0);TextBox.BorderSizePixel = 0;TextBox.Position = UDim2.new(0.0118249543, 0, 0.0875091553, 0);TextBox.Size = UDim2.new(0.982032359, 0, 0.865306079, 0);TextBox.Font = Enum.Font.Highway;TextBox.PlaceholderColor3 = Color3.fromRGB(208, 208, 208);TextBox.PlaceholderText = "‡πÉ‡∏™‡πà‡∏Ñ‡∏µ‡∏¢‡πå‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ";TextBox.Text = "";TextBox.TextColor3 = Color3.fromRGB(255, 255, 255);TextBox.TextScaled = true;TextBox.TextSize = 14.000;TextBox.TextWrapped = true;TextBox.TextXAlignment = Enum.TextXAlignment.Left;UICorner_4.CornerRadius = UDim.new(0, 12);UICorner_4.Parent = KeyPlace;UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(90, 54, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(156, 90, 255))};UIGradient_4.Rotation = -79;UIGradient_4.Parent = KeyPlace;TextLabel.Parent = Frame;TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255);TextLabel.BackgroundTransparency = 1.000;TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0);TextLabel.BorderSizePixel = 0;TextLabel.Position = UDim2.new(0.0176179186, 0, 0.592592657, 0);TextLabel.Size = UDim2.new(0, 375, 0, 43);TextLabel.Font = Enum.Font.Highway;TextLabel.Text = "‡∏´‡∏≤‡∏Å‡∏ï‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Discord ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡πâ‡∏≤‡∏ö‡∏ö";TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255);TextLabel.TextScaled = true;TextLabel.TextSize = 14.000;TextLabel.TextTransparency = 0.070;TextLabel.TextWrapped = true;Old_Text_TextLabel = tostring(TextLabel.Text);ShopFrame.Name = "ShopFrame";ShopFrame.Parent = Frame;ShopFrame.BackgroundColor3 = Color3.fromRGB(65, 65, 65);ShopFrame.BackgroundTransparency = 0.200;ShopFrame.BorderColor3 = Color3.fromRGB(0, 0, 0);ShopFrame.BorderSizePixel = 0;ShopFrame.Position = UDim2.new(0.59471041, 0, 0.055979643, 0);ShopFrame.Size = UDim2.new(0, 260, 0, 310);UICorner_5.CornerRadius = UDim.new(0, 12);UICorner_5.Parent = ShopFrame;TextLabel_2.Parent = ShopFrame;TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255);TextLabel_2.BackgroundTransparency = 1.000;TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0);TextLabel_2.BorderSizePixel = 0;TextLabel_2.Position = UDim2.new(0.0272991471, 0, -0.0466588177, 0);TextLabel_2.Size = UDim2.new(0, 245, 0, 29);TextLabel_2.Font = Enum.Font.Highway;TextLabel_2.Text = "‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤";TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255);TextLabel_2.TextScaled = true;TextLabel_2.TextSize = 14.000;TextLabel_2.TextWrapped = true;TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left;Slide_Image.Name = "Slide_Image";Slide_Image.Parent = ShopFrame;Slide_Image.BackgroundColor3 = Color3.fromRGB(255, 255, 255);Slide_Image.BorderColor3 = Color3.fromRGB(0, 0, 0);Slide_Image.BackgroundTransparency = 1;Slide_Image.BorderSizePixel = 0;Slide_Image.Position = UDim2.new(0.0542222261, 0, 0.0677419379, 0);Slide_Image.Size = UDim2.new(0, 238, 0, 232);Slide_Image.Image = "http://www.roblox.com/asset/?id=138329992312221";UIAspectRatioConstraint.Parent = Slide_Image;UICorner_6.CornerRadius = UDim.new(0, 12);UICorner_6.Parent = Slide_Image;GetWebFrame.Name = "GetWebFrame";GetWebFrame.Parent = Frame;GetWebFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255);GetWebFrame.BorderColor3 = Color3.fromRGB(0, 0, 0);GetWebFrame.BorderSizePixel = 0;GetWebFrame.Position = UDim2.new(0.610271811, 0, 0.737464726, 0);GetWebFrame.Size = UDim2.new(0, 236, 0, 31);GetLinkButton_3.Name = "GetLinkButton";GetLinkButton_3.Parent = GetWebFrame;GetLinkButton_3.BackgroundColor3 = Color3.fromRGB(142, 85, 255);GetLinkButton_3.BackgroundTransparency = 1.000;GetLinkButton_3.BorderColor3 = Color3.fromRGB(0, 0, 0);GetLinkButton_3.BorderSizePixel = 0;GetLinkButton_3.Position = UDim2.new(0.00381197012, 0, -0.030665243, 0);GetLinkButton_3.Size = UDim2.new(1.02083158, 0, 1.10397851, 0);GetLinkButton_3.Font = Enum.Font.Highway;GetLinkButton_3.Text = "‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ß‡πá‡∏ö‡∏ã‡∏∑‡πâ‡∏≠‡∏Ñ‡∏µ‡∏¢‡πå";GetLinkButton_3.TextColor3 = Color3.fromRGB(88, 48, 189);GetLinkButton_3.TextScaled = true;UICorner_7.CornerRadius = UDim.new(0, 12);UICorner_7.Parent = GetWebFrame;UIGradient_5.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(90, 54, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(156, 90, 255))};UIGradient_5.Rotation = -79;UIGradient_5.Parent = GetWebFrame;GetDiscordFrame.Name = "GetDiscordFrame";GetDiscordFrame.Parent = Frame;GetDiscordFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255);GetDiscordFrame.BorderColor3 = Color3.fromRGB(0, 0, 0);GetDiscordFrame.BorderSizePixel = 0;GetDiscordFrame.Position = UDim2.new(0.609538317, 0, 0.880099714, 0);GetDiscordFrame.Size = UDim2.new(0, 240, 0, 32);GetLinkButton_4.Name = "GetLinkButton";GetLinkButton_4.Parent = GetDiscordFrame;GetLinkButton_4.BackgroundColor3 = Color3.fromRGB(142, 85, 255);GetLinkButton_4.BackgroundTransparency = 1.000;GetLinkButton_4.BorderColor3 = Color3.fromRGB(0, 0, 0);GetLinkButton_4.BorderSizePixel = 0;GetLinkButton_4.Position = UDim2.new(0.00381800323, 0, -0.0314426422, 0);GetLinkButton_4.Size = UDim2.new(1.02249587, 0, 1.13197935, 0);GetLinkButton_4.Font = Enum.Font.Highway;GetLinkButton_4.Text = "‡∏•‡∏¥‡∏á‡∏Å‡πå Discord";GetLinkButton_4.TextColor3 = Color3.fromRGB(255, 255, 255);GetLinkButton_4.TextScaled = true;GetLinkButton_4.TextSize = 14.000;GetLinkButton_4.TextWrapped = true;UICorner_8.CornerRadius = UDim.new(0, 12);UICorner_8.Parent = GetDiscordFrame;UIGradient_6.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(104, 90, 255)), ColorSequenceKeypoint.new(0.14, Color3.fromRGB(119, 126, 255)), ColorSequenceKeypoint.new(0.83, Color3.fromRGB(119, 126, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(104, 90, 255))};UIGradient_6.Rotation = -180;UIGradient_6.Parent = GetDiscordFrame;ScriptFrame.Name = "ScriptFrame";ScriptFrame.Parent = Frame;ScriptFrame.BackgroundColor3 = Color3.fromRGB(53, 53, 53);ScriptFrame.BackgroundTransparency = 0.300;ScriptFrame.BorderColor3 = Color3.fromRGB(0, 0, 0);ScriptFrame.BorderSizePixel = 0;ScriptFrame.Position = UDim2.new(0.0176211447, 0, 0.0381679386, 0);ScriptFrame.Size = UDim2.new(0, 374, 0, 204);UICorner_9.CornerRadius = UDim.new(0, 12);UICorner_9.Parent = ScriptFrame;Map_Image.Name = "Map_Image";Map_Image.Parent = ScriptFrame;Map_Image.BackgroundColor3 = Color3.fromRGB(255, 255, 255);Map_Image.BackgroundTransparency = 0.5;Map_Image.BorderColor3 = Color3.fromRGB(0, 0, 0);Map_Image.BorderSizePixel = 0;Map_Image.Position = UDim2.new(0.0355055705, 0, 0.0709677339, 0);Map_Image.Size = UDim2.new(0, 175, 0, 203);Map_Image.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png";UIAspectRatioConstraint_2.Parent = Map_Image;UICorner_10.CornerRadius = UDim.new(0, 12);UICorner_10.Parent = Map_Image;MarketplaceService = game:GetService("MarketplaceService");Map_Name_info = MarketplaceService:GetProductInfo(game.PlaceId);TextLabel_Map_name.Parent = ScriptFrame;TextLabel_Map_name.BackgroundColor3 = Color3.fromRGB(255, 255, 255);TextLabel_Map_name.BackgroundTransparency = 1.000;TextLabel_Map_name.BorderColor3 = Color3.fromRGB(0, 0, 0);TextLabel_Map_name.BorderSizePixel = 0;TextLabel_Map_name.Position = UDim2.new(0.530986905, 0, 0.0680829212, 0);TextLabel_Map_name.Size = UDim2.new(0, 168, 0, 52);TextLabel_Map_name.Font = Enum.Font.Highway;TextLabel_Map_name.Text = Map_Name_info.Name or "Unknown Game";TextLabel_Map_name.TextColor3 = Color3.fromRGB(193, 123, 255);TextLabel_Map_name.TextScaled = true;TextLabel_Map_name.TextSize = 14.000;TextLabel_Map_name.TextTransparency = 0.070;TextLabel_Map_name.TextWrapped = true;stats_TextLabel_ping.Name = "stats_TextLabel_ping";stats_TextLabel_ping.Parent = ScriptFrame;stats_TextLabel_ping.BackgroundColor3 = Color3.fromRGB(255, 255, 255);stats_TextLabel_ping.BackgroundTransparency = 1.000;stats_TextLabel_ping.BorderColor3 = Color3.fromRGB(0, 0, 0);stats_TextLabel_ping.BorderSizePixel = 0;stats_TextLabel_ping.Position = UDim2.new(0.52831316, 0, 0.352396637, 0);stats_TextLabel_ping.Size = UDim2.new(0, 168, 0, 21);stats_TextLabel_ping.Font = Enum.Font.Highway;stats_TextLabel_ping.Text = "‡∏õ‡∏¥‡∏á : ---ms";stats_TextLabel_ping.TextColor3 = Color3.fromRGB(255, 255, 255);stats_TextLabel_ping.TextScaled = true;stats_TextLabel_ping.TextSize = 14.000;stats_TextLabel_ping.TextTransparency = 0.180;stats_TextLabel_ping.TextWrapped = true;stats_TextLabel_Players.Name = "stats_TextLabel_Players";stats_TextLabel_Players.Parent = ScriptFrame;stats_TextLabel_Players.BackgroundColor3 = Color3.fromRGB(255, 255, 255);stats_TextLabel_Players.BackgroundTransparency = 1.000;stats_TextLabel_Players.BorderColor3 = Color3.fromRGB(0, 0, 0);stats_TextLabel_Players.BorderSizePixel = 0;stats_TextLabel_Players.Position = UDim2.new(0.530986905, 0, 0.488719553, 0);stats_TextLabel_Players.Size = UDim2.new(0, 168, 0, 21);stats_TextLabel_Players.Font = Enum.Font.Highway;stats_TextLabel_Players.Text = "‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü -- ‡∏Ñ‡∏ô";stats_TextLabel_Players.TextColor3 = Color3.fromRGB(255, 255, 255);stats_TextLabel_Players.TextScaled = true;stats_TextLabel_Players.TextSize = 14.000;stats_TextLabel_Players.TextTransparency = 0.180;stats_TextLabel_Players.TextWrapped = true;stats_TextLabel_Fps.Name = "stats_TextLabel_Fps";stats_TextLabel_Fps.Parent = ScriptFrame;stats_TextLabel_Fps.BackgroundColor3 = Color3.fromRGB(255, 255, 255);stats_TextLabel_Fps.BackgroundTransparency = 1.000;stats_TextLabel_Fps.BorderColor3 = Color3.fromRGB(0, 0, 0);stats_TextLabel_Fps.BorderSizePixel = 0;stats_TextLabel_Fps.Position = UDim2.new(0.530986905, 0, 0.636727154, 0);stats_TextLabel_Fps.Size = UDim2.new(0, 168, 0, 21);stats_TextLabel_Fps.Font = Enum.Font.Highway;stats_TextLabel_Fps.Text = "Fps --";stats_TextLabel_Fps.TextColor3 = Color3.fromRGB(255, 255, 255);stats_TextLabel_Fps.TextScaled = true;stats_TextLabel_Fps.TextSize = 14.000;stats_TextLabel_Fps.TextTransparency = 0.180;stats_TextLabel_Fps.TextWrapped = true

local function Add_UIStroke(item_to_Add, Tran, Thick, Color, Mode)
	if Mode then
		Mode = Enum.ApplyStrokeMode.Border
	else
		Mode = Enum.ApplyStrokeMode.Contextual
	end
	UIStroke = Instance.new("UIStroke", item_to_Add)
	UIStroke.Transparency = Tran
	UIStroke.Thickness = Thick
	UIStroke.Color = Color
	UIStroke.ApplyStrokeMode = Mode
	return UIStroke
end

Add_UIStroke(TextLabel_Map_name, 0.59, 1.6, Color3.new(0, 0, 0), false)
Add_UIStroke(stats_TextLabel_Fps, 0.59, 1.6, Color3.new(0, 0, 0), false)
Add_UIStroke(stats_TextLabel_ping, 0.59, 1.6, Color3.new(0, 0, 0), false)
Add_UIStroke(stats_TextLabel_Players, 0.59, 1.6, Color3.new(0, 0, 0), false)
Add_UIStroke(TextLabel, 0.59, 1.6, Color3.new(0, 0, 0), false)
Add_UIStroke(TextLabel_2, 0, 3, Color3.new(0.211765, 0.211765, 0.211765), false)
Add_UIStroke(GetLinkButton_3, 0, 1.6, Color3.new(0.831373, 0.831373, 0.831373), false)
Add_UIStroke(GetLinkButton, 0, 1.6, Color3.new(0.831373, 0.831373, 0.831373), false)
Add_UIStroke(GetLinkButton_4, 0.1, 1.6, Color3.new(0.2, 0.317647, 0.517647), false)
Add_UIStroke(GetLinkButton_2, 0, 1.6, Color3.new(0.831373, 0.831373, 0.831373), false)

for _, item in ipairs(ScreenGui:GetDescendants()) do
	if not item:FindFirstChild("UIStroke") then
		if item:IsA("Frame") then
			Add_UIStroke(item, 0.59, 1.6, Color3.new(1, 1, 1), false)
		elseif item:IsA("TextLabel") then
			Add_UIStroke(item, 0.59, 1.6, Color3.new(1, 1, 1), false)
		elseif item:IsA("ImageLabel") then
			Add_UIStroke(item, 0.59, 1.6, Color3.new(1, 1, 1), false)
		end
	end
end

TweenService = game:GetService("TweenService")
backgroundFrame = Frame
-- ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Effect
CIRCLE_COUNT = 40 -- ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°
MIN_SIZE = 3 -- ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å‡∏™‡∏∏‡∏î
MAX_SIZE = 8 -- ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡∏™‡∏∏‡∏î
MIN_SPEED = 10 -- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
MAX_SPEED = 30 -- ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
OPACITY_RANGE = {0.3, 0.5}
local function moveCircle(circle)
	if not circle.Parent then return end
	-- ‡∏™‡∏∏‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
	newX = math.random(-circle.AbsoluteSize.X, backgroundFrame.AbsoluteSize.X)
	newY = math.random(-circle.AbsoluteSize.Y, backgroundFrame.AbsoluteSize.Y)
	-- ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏¢‡∏ô‡πÑ‡∏´‡∏ß
	duration = math.random(MIN_SPEED, MAX_SPEED)
	-- ‡∏™‡∏£‡πâ‡∏≤‡∏á Tween
	tweenInfo = TweenInfo.new(
		duration,
		Enum.EasingStyle.Linear,
		Enum.EasingDirection.InOut,
		0, -- ‡πÑ‡∏°‡πà repeat
		false, -- ‡πÑ‡∏°‡πà reverse
		0 -- ‡πÑ‡∏°‡πà delay
	)
	tween = TweenService:Create(circle, tweenInfo, {
		Position = UDim2.new(0, newX, 0, newY),
		Rotation = circle.Rotation + math.random(-180, 180)
	})
	tween:Play()
	tween.Completed:Connect(function()
		moveCircle(circle) -- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à
	end)
end
-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏á‡∏Å‡∏•‡∏°
function createFloatingCircle()
	circle = Instance.new("Frame")
	circle.Name = "FloatingCircle"
	circle.Parent = backgroundFrame
	-- ‡∏™‡∏∏‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î
	size = math.random(MIN_SIZE, MAX_SIZE)
	circle.Size = UDim2.new(0, size, 0, size)
	circle.ZIndex = -1
	circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	circle.BackgroundTransparency = math.random(OPACITY_RANGE[1] * 100, OPACITY_RANGE[2] * 100) / 100
	circle.BorderSizePixel = 0
	corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(1, 0)
	corner.Parent = circle
	startX = math.random(-circle.AbsoluteSize.X, backgroundFrame.AbsoluteSize.X)
	startY = math.random(-circle.AbsoluteSize.Y, backgroundFrame.AbsoluteSize.Y)
	circle.Position = UDim2.new(0, startX, 0, startY)
	moveCircle(circle)
	return circle
end
function startFloatingEffect()
	for _, child in pairs(backgroundFrame:GetChildren()) do
		if child.Name == "FloatingCircle" then
			child:Destroy()
		end
	end
	for i = 1, CIRCLE_COUNT do
		createFloatingCircle()
		wait(0.001)
	end
end
function stopFloatingEffect()
	for _, child in pairs(backgroundFrame:GetChildren()) do
		if child.Name == "FloatingCircle" then
			child:Destroy()
		end
	end
end
startFloatingEffect()
UIS = game:GetService("UserInputService")
 dragging = false
local dragInput, dragStart, startPos
local function delui(type)
	if type == true then
		playerGui = game.Players.LocalPlayer:FindFirstChild("PlayerGui")
		if playerGui then
			for _, gui in ipairs(playerGui:GetChildren()) do
				if gui.Name == "key" then
					gui:Destroy()
				end
			end
		end
	end
end
local function update(input)
	if not dragging then return end
	delta = input.Position - dragStart
	Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
		startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
Frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = Frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
Frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
UIS.InputChanged:Connect(function(input)
	if input == dragInput then
		update(input)
	end
end)

Map_Image_re, Produc_re = loadstring(game:HttpGet('https://raw.githubusercontent.com/MQPS7/NoPlan/refs/heads/main/Produc1'))()

Slide_Image.Image = Produc_re or "http://www.roblox.com/asset/?id=138329992312221"

if Map_Image_re then
	Map_Image.Image = Map_Image_re
else
	Map_Image.Image = "http://www.roblox.com/asset/?id=3033152788"
end

task.spawn(function()
	stats = game:GetService("Stats")
	RunService = game:GetService("RunService")
	fps, Ping = 0, 0
	RunService.RenderStepped:Connect(function(dt)
		fps = math.floor(1/dt)
	end)
	while true do
		pcall(function()
			rawPing = stats.Network.ServerStatsItem["Data Ping"]:GetValueString()
			Ping = string.match(rawPing, "^[%d%.]+")
			stats_TextLabel_Players.Text = "‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü "..#game.Players:GetPlayers().." ‡∏Ñ‡∏ô"
			stats_TextLabel_ping.Text = "‡∏õ‡∏¥‡∏á "..math.floor(tonumber(Ping)).."ms"
			stats_TextLabel_Fps.Text = "Fps "..fps
		end)
		wait(0.7)
	end
end)

local function Play_Sound(Id)
	task.spawn(function()
		Sound = Instance.new("Sound", game:GetService("SoundService"))
		Sound.SoundId = Id
		Sound.Volume = 1
		Sound:Play()
		wait(3)
		Sound:Destroy()
	end)
end
local function GetScaledSizeAndPos(gui, factor)
	oldSize = gui.Size
	newSize = UDim2.new(
		oldSize.X.Scale * factor,
		oldSize.X.Offset * factor,
		oldSize.Y.Scale * factor,
		oldSize.Y.Offset * factor
	)
	offsetX = (oldSize.X.Offset - newSize.X.Offset) / 2
	offsetY = (oldSize.Y.Offset - newSize.Y.Offset) / 2
	newPos = UDim2.new(
		gui.Position.X.Scale,
		gui.Position.X.Offset + offsetX,
		gui.Position.Y.Scale,
		gui.Position.Y.Offset + offsetY
	)
	return newSize, newPos
end
local function AnimateButton(button)
	if not button or not button:IsA("GuiObject") then return end
	originalSize = button.Size
	originalPos = button.Position

	size1, pos1 = GetScaledSizeAndPos(button, 0.9)
	size2, pos2 = GetScaledSizeAndPos(button, 1.1)
	tween1 = TweenService:Create(button, TweenInfo.new(0.1), {Size = size1, Position = pos1})
	tween2 = TweenService:Create(button, TweenInfo.new(0.1), {Size = size2, Position = pos2})
	tween3 = TweenService:Create(button, TweenInfo.new(0.1), {Size = originalSize, Position = originalPos})

	tween1:Play()
	tween1.Completed:Connect(function()
		tween2:Play()
		tween2.Completed:Connect(function()
			tween3:Play()
		end)
	end)
end

local function Nontification(tel)
	task.spawn(function()
		TextLabel.Text = tel
		wait(3)
		TextLabel.Text = Old_Text_TextLabel
	end)
end

GetLinkButton_3.Activated:Connect(function()
	GetLinkButton_3.Active = false
	AnimateButton(GetLinkButton_3.Parent)
	Play_Sound("rbxassetid://500472891")
	setclipboard("https://somtank.xyz")
	wait(0.35)
	GetLinkButton_3.Active = true
end)

GetLinkButton_4.Activated:Connect(function()
	GetLinkButton_4.Active = false
	AnimateButton(GetLinkButton_4.Parent)
	Play_Sound("rbxassetid://500472891")
	setclipboard("https://discord.gg/4v4X79djPs")
	wait(0.35)
	GetLinkButton_4.Active = true
end)

GetLinkButton_2.Activated:Connect(function()
	GetLinkButton_2.Active = false
	AnimateButton(GetLinkButton_2.Parent)
	Play_Sound("rbxassetid://500472891")
	success = verifyKey(TextBox.Text);
	if success then
		saveKey(TextBox.Text)
		ScreenGui:Destroy()
		Key_Is_valid = true
		getgenv().BlurPartFrame:Destroy()
	else
		Nontification("‡∏Ñ‡∏µ‡∏¢‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
	end
	wait(0.35)
	GetLinkButton_2.Active = true
end)

GetLinkButton.Activated:Connect(function()
	GetLinkButton.Active = false
	AnimateButton(GetLinkButton.Parent)
	Play_Sound("rbxassetid://500472891")
    copyLink()
	wait(0.35)
	GetLinkButton.Active = true
end)

repeat wait(0.1) until Key_Is_valid == true

repeat wait(0.2) until game.Players.LocalPlayer and game.Players.LocalPlayer.Character

if getgenv().SomtankIsRun then return end
getgenv().SomtankIsRun = true

WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()
Lobby_Data = loadstring(game:HttpGet("https://raw.githubusercontent.com/MQPS7/Info/refs/heads/main/HuntyZ"))()
Q_on_url = "https://raw.githubusercontent.com/MQPS7/NoPlan/refs/heads/main/HuntyZombies1"

local function Translate(ThaiLang, EngLang)
	Resut = ThaiLang
	if getgenv().Setting and getgenv().Setting.Language then
		if getgenv().Setting.Language == "Thai" then
			Resut = ThaiLang
		elseif getgenv().Setting.Language == "English" then
			Resut = EngLang
		end
	end
	return Resut
end

Window = WindUI:CreateWindow({
	Title = "Somtank",
	Icon = "rbxassetid://80019916158199",
	Author = "v0.0.5 | credit. Daytoday2044 / Driver",
	Folder = "SOMTANK",
	Size = UDim2.fromOffset(460, 320),
	Transparent = true,
	Theme = "Violet",
	User = {Enabled = true,Callback = function() end,Anonymous = false},
	SideBarWidth = 200,
	ScrollBarEnabled = true,
})

WindUI.TransparencyValue = 0.1

HttpService = game:GetService("HttpService")
PathfindingService = game:GetService("PathfindingService")
TweenService = game:GetService("TweenService")
RunService = game:GetService("RunService")
Lighting = game:GetService("Lighting")
replicatedStorage = game:GetService("ReplicatedStorage")
CoreGui = game:GetService("CoreGui")
UIS = game:GetService("UserInputService")
ReplicatedFirst = game:GetService("ReplicatedFirst")

jsonData = nil

if getgenv().Setting then
	for k, v in pairs(getgenv().Setting) do
		print("************* "..k, v)
	end
end

player = game.Players.LocalPlayer
character = player.Character
humanoid = character:FindFirstChildOfClass("Humanoid")
HMNRT = character:WaitForChild("HumanoidRootPart")
Camera = workspace.CurrentCamera
screenSize = Camera.ViewportSize
plrGui = player.PlayerGui

ScreenGui, Icon_Position, ScriptIsRunning, LoadConfig = Instance.new("ScreenGui", CoreGui), nil, true, true
BlackScreen, ShowText, Cool_Down_Auto_Create = false, nil , 10

task.spawn(function()-- Anti Bug
	while true do
		task.wait(1)
		pcall(function()
			character = game.Players.LocalPlayer.Character
			humanoid = character:FindFirstChild("Humanoid")
			HMNRT = character:FindFirstChild("HumanoidRootPart")
			plrGui = game.Players.LocalPlayer.PlayerGui
			if BlackScreen == false then
				ShowText = nil
				if plrGui:FindFirstChild("SomtankBlackSgreen") then
					plrGui:FindFirstChild("SomtankBlackSgreen"):Destroy()
					Camera.CameraType = Enum.CameraType.Custom
				end
			else
				if not plrGui:FindFirstChild("SomtankBlackSgreen") then
					NewScreenGui = Instance.new("ScreenGui", plrGui)
					NewCanvas = Instance.new("CanvasGroup", NewScreenGui)
					NewTextLabel = Instance.new("TextLabel", NewScreenGui)
					NewCanvas.Position = UDim2.new(0, 0, -0.2, 0)
					NewCanvas.Size = UDim2.new(2, 0, 2, 0)
					NewCanvas.BackgroundColor3 = Color3.new(0, 0, 0)
					NewTextLabel.Position = UDim2.new(0, 0, 0, 0)
					NewTextLabel.Size = UDim2.new(1, 0, 1, 0)
					NewTextLabel.BackgroundTransparency = 1
					NewTextLabel.TextColor3 = Color3.new(1, 1, 1)
					NewTextLabel.TextScaled = true
					NewTextLabel.ZIndex = 9
					NewTextLabel.Text = "Hello World"
					NewScreenGui.Name = "SomtankBlackSgreen"
					ShowText = NewTextLabel
				end
				cameraPos = HMNRT.Position + Vector3.new(0, 15, 0)
				lookAtPos = cameraPos + Vector3.new(0, 100, 0)
				Camera.CameraType = Enum.CameraType.Scriptable
				Camera.CFrame = CFrame.new(cameraPos, lookAtPos)
			end
		end)
	end
end)

task.spawn(function()
	pcall(function()
		if game:GetService("ReplicatedStorage"):FindFirstChild("Packets"):FindFirstChild("RequestDailyReward") then
			game:GetService("ReplicatedStorage"):WaitForChild("Packets"):WaitForChild("RequestDailyReward"):InvokeServer()
			firesignal(plrGui.GUI.DailyRewards.Banner.ExitButton.MouseButton1Click)
		end
		codes_Lobby = Lobby_Data.Codes or {"Hunty"}
		redeem = game:GetService("ReplicatedStorage"):WaitForChild("Packets"):WaitForChild("RedeemCode")
		for _, code in ipairs(codes_Lobby) do
			redeem:InvokeServer(code)
		end
	end)
end)

local function MakeDraggableButton(button: ImageButton, MoveFrame)
	dragging, dragStart, firstPos, startPos = false, nil, nil, nil
	button.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			Icon_Position = button.Position
			startPos = MoveFrame.Position
			if not firstPos then
				firstPos = MoveFrame.Position
			end
		end
	end)
	UIS.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
			delta = input.Position - dragStart
			MoveFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)
end
local function MakeImageButton(Parent, Size, Posi, BGtran, Color, Imtran, imageID)
	NewFrame = Instance.new("ImageButton", Parent)
	UICorner = Instance.new("UICorner", NewFrame)
	NewFrame.Position = Posi
	NewFrame.Size = Size
	NewFrame.BackgroundTransparency = BGtran
	NewFrame.Image = imageID or ""
	NewFrame.ImageTransparency = Imtran
	NewFrame.BackgroundColor3 = Color
	NewFrame.ImageColor3 = Color
	NewFrame.ZIndex = 2
	return NewFrame
end
MoveIcon = MakeImageButton(ScreenGui, UDim2.new(0, 53,0, 51), UDim2.new(0.100, 0,0.447, 0), 1, Color3.new(1, 1, 1), 0, "rbxassetid://81129676934693")
FOR_MoveIcon = Instance.new("UIAspectRatioConstraint", MoveIcon)
MakeDraggableButton(MoveIcon, MoveIcon)

if getgenv().MainButton677 then
	getgenv().MainButton677:Destroy()
	getgenv().MainButton677 = ScreenGui
else
	getgenv().MainButton677 = ScreenGui
end

Url_WebHook = nil
local function getAvatarUrl(userId)
	req = (http_request)
	if not req then return nil end
	response = req({
		Url = "https://thumbnails.roblox.com/v1/users/avatar-headshot?userIds=" .. userId .. "&size=420x420&format=Png&isCircular=false",
		Method = "GET"
	})
	if response and response.Body then
		local data = HttpService:JSONDecode(response.Body)
		if data and data.data and data.data[1] and data.data[1].imageUrl then
			return data.data[1].imageUrl
		end
	end
	return nil
end
avatarUrl = getAvatarUrl(player.UserId) or "https://www.roblox.com/favicon.ico"
local function sendWebhook(cash, exp, playtime, Win)
	pcall(function()
		Stage_OnEnd = Translate("‡∏ä‡∏ô‡∏∞", "Win")
		Color_Embed = tonumber(16730495)
		if Win == true then
			Color_Embed = tonumber(6390015)
			Stage_OnEnd = Translate("‡∏ä‡∏ô‡∏∞", "Win")
		else
			Color_Embed = tonumber(16730495)
			Stage_OnEnd = Translate("‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß", "Fail")
		end
		embed = {
			["title"] = Translate("üìä ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ", "üìä Player ")..Stage_OnEnd,
			["description"] = 
				"**Player:** `" .. player.Name .. "`\n" ..
				"**Cash:** `" .. cash .. "`\n" ..
				"**EXP:** `" .. exp .. "`\n" ..
				"**Playtime:** `" .. playtime .. " ‡∏ô‡∏≤‡∏ó‡∏µ`",
			["color"] = Color_Embed, -- ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏™‡∏∏‡πà‡∏°
			["thumbnail"] = {["url"] = avatarUrl},
			["footer"] = {["text"] = "Auto Logger"},
			["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")}
		data = {
			["username"] = "Somtank Notification",
			["avatar_url"] = "https://media.discordapp.net/attachments/1367059030274609183/1402311137189695638/DIsCord.png?ex=68ae7a44&is=68ad28c4&hm=776c9522ad4b5fbe54d37080cfa5af2c64204df8be28738c81952e1cbacfe5c5&=&format=webp&quality=lossless&width=656&height=656",
			["embeds"] = {embed}}
		jsonDataWebhook = HttpService:JSONEncode(data)
		http_request = (http_request)
		if http_request then
			http_request({
				Url = Url_WebHook or getgenv().Setting.WebHook,
				Method = "POST",
				Headers = {["Content-Type"] = "application/json"},
				Body = jsonDataWebhook})
		end
	end)
end

local Dropdown_PartySize, Toggle_Only_allow_friends
, Dropdown_Choose_Map_Farm, Dropdown_Choose_Difficulty_Farm, Dropdown_Choose_Mode_Farm

local function getCurrentConfig()
	getCurrentConfig_Mode_Farm, getCurrentConfig_Difficulty_Farm, getCurrentConfig_Map_Farm = "Campaign", "Normal", "School"
	return_value = {
		["friend"] = Toggle_Only_allow_friends and Toggle_Only_allow_friends.Value or false,
		["Map"] = Dropdown_Choose_Map_Farm and Dropdown_Choose_Map_Farm.Value or "School",
		["Difficulty"] = Dropdown_Choose_Difficulty_Farm and Dropdown_Choose_Difficulty_Farm.Value or "Normal",
		["Mode"] = Dropdown_Choose_Mode_Farm and Dropdown_Choose_Mode_Farm.Value or "Campaign",
		["playerSize"] = (Dropdown_PartySize and Dropdown_PartySize.Value == "Infinity") and 0/0 or tonumber(Dropdown_PartySize and Dropdown_PartySize.Value) or 1}
	if getgenv().Setting then
		print("Found getgenv().Setting")
		if getgenv().Setting.Map then
			getCurrentConfig_Map_Farm = getgenv().Setting.Map
		end
		if getgenv().Setting.Difficulty then
			getCurrentConfig_Difficulty_Farm = getgenv().Setting.Difficulty
		end
		if getgenv().Setting.Mode then
			getCurrentConfig_Mode_Farm = getgenv().Setting.Mode
		end
		return_value = {
			["friend"] = Toggle_Only_allow_friends and Toggle_Only_allow_friends.Value or false,
			["Map"] = getCurrentConfig_Map_Farm or "School",
			["Difficulty"] = getCurrentConfig_Difficulty_Farm or "Normal",
			["Mode"] = getCurrentConfig_Mode_Farm or "Campaign",
			["playerSize"] = (Dropdown_PartySize and Dropdown_PartySize.Value == "Infinity") and 0/0 or tonumber(Dropdown_PartySize and Dropdown_PartySize.Value) or 1}		
	end
	return return_value
end

local function isAutoSystemEnabled()
	resut = false
	if getgenv().Setting and getgenv().Setting.Farm_Mode and getgenv().Setting.Farm_Mode == "Kai_tan" then
		resut = true
	end
	return Toggle_AutoCreateRoom and Toggle_AutoCreateRoom.Value or resut
end

task.spawn(function()
	if tonumber(game.PlaceId) ~= tonumber(103754275310547) then return end
	
	Packets = replicatedStorage:WaitForChild("Packets")
	ExitFromParty = Packets:WaitForChild("ExitFromParty")
	
	Packets:WaitForChild("PartyRequest").OnClientInvoke = function()
		cfg = getCurrentConfig()
		warn("üéÆ PartyRequest config:", game:GetService("HttpService"):JSONEncode(cfg))
		return cfg
	end

	for _, conn in ipairs(getconnections(plrGui.GUI.StartPlaceRedo.Content.iContent.Button.MouseButton1Click)) do
		conn.Function()
	end
	
	local function refreshCharacter()
		warn("Character ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÅ‡∏•‡πâ‡∏ß:", HMNRT:GetFullName())
		hum = character:WaitForChild("Humanoid")
		hum.Died:Connect(function()
			if isAutoSystemEnabled() then
				warn("üíÄ ‡∏ï‡∏≤‡∏¢ ‚Üí Exit ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
				pcall(function() ExitFromParty:FireServer() end)
			end
		end)
	end
	player.CharacterAdded:Connect(refreshCharacter)
	refreshCharacter()

	local function OtherPlayerNear(TargetPosition, NearValue)
		Players = game:GetService("Players")
		for _, v in ipairs(Players:GetChildren()) do
			if v ~= player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
				hrp2 = v.Character:FindFirstChild("HumanoidRootPart")
				if hrp2 then
					Dis = (hrp2.Position - TargetPosition).Magnitude
					if Dis < NearValue then
						return true
					end
				end
			end
		end
		return false
	end
	
	local function findEmptyMatch()
		for _, part in ipairs(workspace.Match:GetChildren()) do
			board = part:FindFirstChild("MatchBoard")
			if board and board:FindFirstChild("playerCount") and board.playerCount.Text == "" then
				if not OtherPlayerNear(part.Position, 7) then
					return part
				end
			end
		end
		return nil
	end
	
	local function otherPlayersInMatch(part)
		if not part then return false end
		params = OverlapParams.new()
		params.FilterType = Enum.RaycastFilterType.Whitelist
		whitelist = {}
		for _, plr in ipairs(game:GetService("Players"):GetPlayers()) do
			if plr ~= player and plr.Character then
				table.insert(whitelist, plr.Character)
			end
		end
		params.FilterDescendantsInstances = whitelist
		parts = workspace:GetPartBoundsInBox(part.CFrame, part.Size, params)
		for _, p in ipairs(parts) do
			model = p:FindFirstAncestorOfClass("Model")
			plr = model and player:GetPlayerFromCharacter(model)
			if plr and plr ~= player then
				return true
			end
		end
		return false
	end
	
	task.spawn(function()
		
		for i=1,Cool_Down_Auto_Create do
			wait(1)
		end
		
		while true do
			if not isAutoSystemEnabled() then task.wait(0.001) continue end
			if player:GetAttribute("onMatch") then task.wait(0.0001) continue end
			local ok, err = pcall(function()
				target = findEmptyMatch()
				if target and HMNRT and HMNRT.Parent then
					firetouchinterest(HMNRT, target, 0)
					task.wait(0.0001)
					firetouchinterest(HMNRT, target, 1)
					success = false
					for i = 1, 10 do
						if player:GetAttribute("onMatch") then
							success = true
							break
						end
						task.wait(0.0001)
					end
					if success then
						if otherPlayersInMatch(target) then
							pcall(function() ExitFromParty:FireServer() end)
						else
						end
					end
				end
			end)
			if not ok then warn("Loop error:", err) end
			task.wait(0.0001)
		end
	end)
	
	gui = plrGui:WaitForChild("GUI")
	backBtn = gui:WaitForChild("Back"):WaitForChild("Button")
	backBtn.MouseButton1Click:Connect(function()
		pcall(function() ExitFromParty:FireServer() end)
	end)

	local function updateBackBtnVisible()
		backBtn.Visible = player:GetAttribute("onMatch") and true or false
	end
	updateBackBtnVisible()
	player:GetAttributeChangedSignal("onMatch"):Connect(updateBackBtnVisible)
	
end)

-------------------------------------------------------------------------- Day to Day 2044
local function InitAutoClaimAch()
	if tonumber(game.PlaceId) ~= tonumber(103754275310547) then return end
	local tbl = {
		lp = player,
	}
	tbl.gui = plrGui:WaitForChild("GUI")
	tbl.scroller = tbl.gui.Achievements.Content.Scroller
	tbl.claim = function(btn)
		for _, conn in ipairs(getconnections(btn.MouseButton1Click)) do
			conn.Function()
		end
	end
	tbl.checkAndClaim = function()
		tbl.claimable = {}
		for _, ach in ipairs(tbl.scroller:GetChildren()) do
			if ach.Name == "achievement" then
				tbl.btn = ach:FindFirstChild("Content") and ach.Content:FindFirstChild("Button")
				if tbl.btn then
					tbl.claimBtn, tbl.lockedBtn = tbl.btn:FindFirstChild("Claim"), tbl.btn:FindFirstChild("Locked")
					if tbl.claimBtn and tbl.lockedBtn and tbl.claimBtn.Visible and not tbl.lockedBtn.Visible then
						table.insert(tbl.claimable, tbl.claimBtn)
					end
				end
			end
		end
		for _, b in ipairs(tbl.claimable) do
			tbl.claim(b)
		end
	end
	task.spawn(function()
		while task.wait(2) do
			if getgenv().AutoClaimAch then
				tbl.checkAndClaim()
			end
		end
	end)
end
InitAutoClaimAch()
local function InitAutoClaim()
	if tonumber(game.PlaceId) ~= tonumber(103754275310547) then return end
	local tbl = {
		lp = player,
	}
	tbl.gui = plrGui:WaitForChild("GUI")
	tbl.scroller = tbl.gui.Quests.Content.Scroller
	tbl.claimQuest = function(btn)
		for _, conn in ipairs(getconnections(btn.MouseButton1Click)) do
			conn.Function()
		end
	end
	tbl.checkAndClaimQuests = function()
		tbl.claimable = {}
		for _, quest in ipairs(tbl.scroller:GetChildren()) do
			if quest.Name == "Quest" then
				tbl.btn = quest:FindFirstChild("Content") and quest.Content:FindFirstChild("Button")
				if tbl.btn then
					tbl.claimBtn, tbl.lockedBtn = tbl.btn:FindFirstChild("Claim"), tbl.btn:FindFirstChild("Locked")
					if tbl.claimBtn and tbl.lockedBtn and tbl.claimBtn.Visible and not tbl.lockedBtn.Visible then
						table.insert(tbl.claimable, tbl.claimBtn)
					end
				end
			end
		end
		for _, b in ipairs(tbl.claimable) do
			tbl.claimQuest(b)
		end
	end
	task.spawn(function()
		while task.wait(2) do
			if getgenv().AutoClaim then
				tbl.checkAndClaimQuests()
			end
		end
	end)
end
InitAutoClaim()
local function InitGodmode()
	if tonumber(game.PlaceId) == tonumber(103754275310547) then return end
	local t = {
		ReplicatedFirst = game:GetService("ReplicatedFirst"),
		Players = game:GetService("Players"),
	}
	pcall(function()
		t.GameCore = t.ReplicatedFirst:WaitForChild("GameCore")
		t.Shared   = t.GameCore:WaitForChild("Shared")
		t.Packets  = require(t.Shared:WaitForChild("ByteNetPackets")).packets
		t.target   = t.Packets.activateDoor.send
		t.oldSend  = clonefunction(t.target)
		t.enable = function()
			if #t.Players:GetPlayers() > 1 then
				warn("Godmode blocked: ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏Ñ‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü")
				return
			end
			hookfunction(t.target, newcclosure(function(door, ...)
				if checkcaller() then
					return t.oldSend(door, ...)
				end
				warn("Godmode active:", door and door:GetFullName())
				if door and door:IsA("Model") then
					door:SetAttribute("activated", true)
					for _, part in ipairs(door:GetDescendants()) do
						if part:IsA("BasePart") then
							part.CanCollide, part.CanTouch, part.CanQuery = false, false, false
						end
					end
				end
				return
			end))
			warn("Godmode enabled")
		end
		t.disable = function()
			restorefunction(t.target)
			warn("Godmode disabled, restored to original")
		end
		t.toggle = function(state)
			if state then
				t.enable()
			else
				t.disable()
			end
			getgenv().Godmode = state
		end
	end)
	return t
end
Godmode = InitGodmode()
getgenv().Godmode = false
local function InitNoEffect()
	if tonumber(game.PlaceId) == tonumber(103754275310547) then return end
	local t = {
		ReplicatedFirst = game:GetService("ReplicatedFirst"),
	}
	t.GameCore = t.ReplicatedFirst:WaitForChild("GameCore")
	t.Shared   = t.GameCore:WaitForChild("Shared")
	do
		m = require(t.Shared:WaitForChild("StatusEffects"))
		m.apply, m.update, m.remove = function(...)end, function(...)end, function(...)end
		m.validate, m.getEntity, m.init = function(...)return false end, function(...)return nil end, function(...)end
		for k in pairs(m.events) do
			m.events[k].Fire    = function(...) end
			m.events[k].Connect = function(...) return {Disconnect=function()end} end
		end
	end
	do
		m = require(t.Shared.StatusEffects.Effect)
		m.new     = function(...) return setmetatable({}, {__index=function() return function()end end}) end
		m.update  = function(...) end
		m.destroy = function(...) end
		m.runFunc = function(...) end
	end
	do
		m = require(t.Shared.StatusEffects.EffectsData)
		for _, d in pairs(m) do d.functions = {} end
	end
	do
		m = require(t.Shared:WaitForChild("VFXManager"))
		m.emit, m.toggle, m.toggleAll, m.getVFXObject = function(...)end, function(...)end, function(...)end, function(...)return nil end
	end
	do
		m = require(t.Shared.VFXManager.VFX)
		m.new = function(...) return {emit=function()end, toggle=function()end} end
	end
	do
		m = require(t.Shared.AbilityService)
		m.getAbilityHandler = function(...) return {addStatMult=function()end, statsMult={}} end
	end
	return t
end
local function InitAutoClaimSecretQuest()
	if tonumber(game.PlaceId) ~= tonumber(103754275310547) then return end
	local tbl = {
		lp = player,
	}
	tbl.gui = tbl.lp:WaitForChild("PlayerGui"):WaitForChild("GUI")
	tbl.scroller = tbl.gui.SecretQuests.Content.Scroller
	tbl.claim = function(btn)
		for _, conn in ipairs(getconnections(btn.MouseButton1Click)) do
			conn.Function()
		end
	end
	tbl.checkAndClaim = function()
		tbl.claimable = {}
		for _, sq in ipairs(tbl.scroller:GetChildren()) do
			if sq.Name == "sQuest" then
				tbl.btn = sq:FindFirstChild("Content") and sq.Content:FindFirstChild("Button")
				if tbl.btn then
					tbl.claimBtn, tbl.lockedBtn = tbl.btn:FindFirstChild("Claim"), tbl.btn:FindFirstChild("Locked")
					if tbl.claimBtn and tbl.lockedBtn and tbl.claimBtn.Visible and not tbl.lockedBtn.Visible then
						table.insert(tbl.claimable, tbl.claimBtn)
					end
				end
			end
		end
		for _, b in ipairs(tbl.claimable) do
			tbl.claim(b)
		end
	end
	task.spawn(function()
		while task.wait(2) do
			if getgenv().AutoClaimSecretQuest then
				tbl.checkAndClaim()
			end
		end
	end)
end
InitAutoClaimSecretQuest()
-------------------------------------------------------------------------- Day to Day 2044 End

OpenMainFrame = false
MoveIcon.Activated:Connect(function()
	if Icon_Position == MoveIcon.Position then
		OpenMainFrame = not OpenMainFrame
		if OpenMainFrame == false then
			Window:Open()
		else
			Window:Close()
		end
	end
end)

Window:EditOpenButton({Title = "",Icon = "",CornerRadius = UDim.new(0,0),StrokeThickness = 0,Color = ColorSequence.new(Color3.fromHex("FF0F7B"),Color3.fromHex("F89B29")),Enabled = false,Draggable = false,})

ConfigManager = Window.ConfigManager
myConfig = ConfigManager:CreateConfig("HuntyZombies")

Tabs = {}

do
	Tabs.Player = Window:Section({
		Title = "‡∏Å‡∏•‡∏∏‡πà‡∏° 1",
		Opened = true,
	})

	Tabs.Mode1 = Tabs.Player:Tab({ Title = Translate("‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô", "Player"), Icon = "rbxassetid://2795572800" })

	Tabs.Mode2 = Tabs.Player:Tab({ Title = Translate("‡∏ü‡∏≤‡∏£‡πå‡∏°", "Farm"), Icon = "rbxassetid://9008236330" })

	Tabs.Mode3 = Tabs.Player:Tab({ Title = Translate("‡∏™‡∏∏‡πà‡∏°", "Spin"), Icon = "rbxassetid://438217404" })
	
	Tabs.Mode4 = Tabs.Player:Tab({ Title = Translate("‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", "Misc"), Icon = "rbxassetid://12120687742" })

end

Window:SelectTab(1)

local function matchesAllowedKeyword(value, allowedKeywords)
	value = value:lower()
	for _, keyword in ipairs(allowedKeywords) do
		if string.find(value, keyword:lower()) then
			return true
		end
	end
	return false
end

local function IsNear(pos1, pos2, maxDist)
	return (pos1 - pos2).Magnitude <= maxDist
end

Section = Tabs.Mode4:Section({ 
	Title = "Section",
	TextXAlignment = "Left",
	TextSize = 25,
})
Section:SetTitle(Translate("üåè ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", "üåè General functions"))

Toggle_Auto_Accept_Secret_Quest = Tabs.Mode4:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏ß‡∏™‡∏•‡∏±‡∏ö ( Secret )", "Auto accept secret quests"),
	Value = false,
	Callback = function(state)
		getgenv().AutoClaimSecretQuest = state
	end
})

Toggle_Auto_Claim_Achievement = Tabs.Mode4:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ( Achievement )", "Auto Claim Achievement"),
	Value = false,
	Callback = function(state)
		getgenv().AutoClaimAch = state
	end
})

Toggle_Auto_Claim_Quest = Tabs.Mode4:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÄ‡∏Ñ‡∏ß‡∏™ ( Quest )", "Auto receive quest rewards"),
	Value = false,
	Callback = function(state)
		getgenv().AutoClaim = state
	end
})

--Tabs.Mode2:Divider()

Tabs.Mode4:Divider()

Tabs.Mode4:Toggle({
	Title = Translate("‡∏ã‡∏≠‡∏°‡∏ö‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à ( ‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô )", "Zombies don't care ( Play alone only )"),
	Value = false,
	Callback = function(state)
		pcall(function()
			Godmode.toggle(state)
		end)
	end
})

Tabs.Mode4:Button({
	Title = Translate("‡∏õ‡∏¥‡∏î‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å", "Turn off the effect"),
	Desc = Translate("‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å", "Click to turn off the effect."),
	Callback = function()
		InitNoEffect()
	end,
})

Anti_Ragdool = false
Toggle_Anti_Ragdool = Tabs.Mode4:Toggle({
	Title = Translate("‡πÅ‡∏≠‡∏ô‡∏ï‡∏¥‡∏™‡∏ï‡∏±‡πä‡∏ô", "Anti ragdoll"),
	Value = true,
	Callback = function(state)
		Anti_Ragdool = state
	end
})

--Tabs.Mode2:Divider()

Section = Tabs.Mode4:Section({ 
	Title = "Section",
	TextXAlignment = "Left",
	TextSize = 25,
})
Section:SetTitle(Translate("üì© ‡πÄ‡∏ß‡πá‡∏ö‡∏Æ‡∏∏‡∏Å", "üì© Webhook"))

Send_Webhook_IfEnd = false
Toggle_Send_Webhook_IfEnd = Tabs.Mode4:Toggle({
	Title = Translate("‡∏™‡πà‡∏á‡πÄ‡∏ß‡πá‡∏ö‡∏Æ‡∏∏‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏ö‡πÄ‡∏Å‡∏°", "Send webhook at the end of the game"),
	Value = false,
	Callback = function(state)
		Send_Webhook_IfEnd = state
	end
})

Input_User_Webhook = Tabs.Mode4:Input({
	Title       = Translate("‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏ß‡πá‡∏ö‡∏Æ‡∏∏‡∏Å", "Link Webhook"),
	Desc        = Translate("‡∏ß‡∏≤‡∏á‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏ß‡πá‡∏ö‡∏Æ‡∏∏‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì", "Place your webhook link"),
	Value       = "",
	Type        = "Input",
	Placeholder = Translate("‡∏ß‡∏≤‡∏á‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ", "Paste here"),
	Callback    = function(text)
		Url_WebHook = tostring(text)
	end
})

Button_SendWebHook_End = Tabs.Mode4:Button({
	Title = Translate("‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡∏Æ‡∏∏‡∏Å", "Test webhook"),
	Desc = Translate("‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡πÄ‡∏ß‡πá‡∏ö‡∏Æ‡∏∏‡∏Å", "Click to Send webhook"),
	Callback = function()
		sendWebhook("999k", "123", "11:22:33", true)
	end,
})

Tabs.Mode4:Divider()

Spin_Slot = 1
Slider_Spin_Slot = Tabs.Mode3:Slider({
	Title = Translate("‡∏™‡∏•‡πá‡∏≠‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°", "Slots you want to randomize"),
	Value = {
		Min = 1,
		Max = 4,
		Default = 1,
	},
	Callback = function(value)
		Spin_Slot = value
	end
})

Tabs.Mode3:Divider()

Section = Tabs.Mode3:Section({ 
	Title = "Section",
	TextXAlignment = "Left",
	TextSize = 25,
})
Section:SetTitle(Translate("‚öîÔ∏è ‡∏™‡∏∏‡πà‡∏°‡∏´‡∏≤‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò", "‚öîÔ∏è Random find Weapon"))

Choose_Target_Weapon = ""
Tabs.Mode3:Dropdown({
	Title = Translate("‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ", "Target Weapon"),
	Values = Lobby_Data.Weapons or {"BASEBALL", "AXES", "GUITAR", "DUAL GUN", "KATANA", "GREATSWORD"},
	Value = "",
	Callback = function(option) 
		Choose_Target_Weapon = option
	end
})

Auto_Random_Find_Weapon = false
Tabs.Mode3:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏™‡∏∏‡πà‡∏°‡∏´‡∏≤‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò", "Auto Random Find Weapon"),
	Value = false,
	Callback = function(state)
		Auto_Random_Find_Weapon = state
	end
})

Auto_Random_Find_Weapon_Lucky = false
Tabs.Mode3:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏™‡∏∏‡πà‡∏°‡∏´‡∏≤‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò‡∏•‡∏±‡∏Ñ‡∏Å‡∏µ‡πâ", "Auto Random Find Weapon Lucky"),
	Value = false,
	Callback = function(state)
		Auto_Random_Find_Weapon_Lucky = state
	end
})

Section = Tabs.Mode3:Section({ 
	Title = "Section",
	TextXAlignment = "Left",
	TextSize = 25,
})
Section:SetTitle(Translate("üîÆ ‡∏™‡∏∏‡πà‡∏°‡∏´‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ", "üîÆ Random find Perk"))

Choose_Target_Perk = ""
Tabs.Mode3:Dropdown({
	Title = Translate("‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ", "Target Perk"),--Vampire
	Values = Lobby_Data.Perks or {"BERSERKER", "HEALER", "FLAME", "CRITICAL", "UNDEAD", "VAMPIRE"},
	Value = "",
	Callback = function(option) 
		Choose_Target_Perk = option
	end
})

Auto_Random_Find_Perk = false
Tabs.Mode3:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏™‡∏∏‡πà‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ", "Auto Random Find Perk"),
	Value = false,
	Callback = function(state)
		Auto_Random_Find_Perk = state
	end
})

Auto_Random_Find_Perk_Lucky = false
Tabs.Mode3:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏™‡∏∏‡πà‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏±‡∏Ñ‡∏Å‡∏µ‡πâ", "Auto Random Find Perk Lucky"),
	Value = false,
	Callback = function(state)
		Auto_Random_Find_Perk_Lucky = state
	end
})

Section = Tabs.Mode1:Section({ 
	Title = "Section",
	TextXAlignment = "Left",
	TextSize = 25,
})
Section:SetTitle(Translate("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô", "Player Setting"))

pcall(function()
	
	Tabs.Mode1:Slider({
		Title = Translate("‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô", "WalkSpeed"),
		Value = {
			Min = 0,
			Max = 300,
			Default = 16,
		},
		Callback = function(value)
			pcall(function()
				humanoid.WalkSpeed = tonumber(value)
			end)
		end
	})

	Tabs.Mode1:Slider({
		Title = Translate("‡∏û‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î", "Jump Power"),
		Value = {
			Min = 0,
			Max = 50,
			Default = 7.2,
		},
		Step = 0.5,
		Callback = function(value)
			pcall(function()
				humanoid.JumpHeight = value
			end)
		end
	})
	
end)

AutoKill = false
Tabs.Mode1:Toggle({
	Title = Translate("‡∏Ñ‡∏¥‡∏•‡∏≠‡∏≠‡∏£‡πà‡∏≤", "Kill Aura"),
	Value = false,
	Callback = function(state)
		AutoKill = state
	end
})

Fast_AutoKill = false
Tabs.Mode1:Toggle({
	Title = Translate("‡∏Ñ‡∏¥‡∏•‡∏≠‡∏≠‡∏£‡πà‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡πá‡∏ß", "Fast Kill Aura"),
	Value = false,
	Callback = function(state)
		Fast_AutoKill = state
	end
})

Speed_To_Kill_Aura = 0.48
Slider_Speed_To_Kill_Aura = Tabs.Mode1:Slider({
	Title = Translate("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏µ", "Frequency of hitting"),
	Value = {
		Min = 0,
		Max = 0.8,
		Default = 0.48,
	},
	Step = 0.02,
	Callback = function(value)
		Speed_To_Kill_Aura = value
	end
})

Fps_Value = 60
Slider_Fps_Value = Tabs.Mode4:Slider({
	Title = Translate("‡πÄ‡∏ã‡πá‡∏ó‡∏Ñ‡πà‡∏≤ fps", "Set Fps"),
	Value = {
		Min = 0,
		Max = 120,
		Default = 60,
	},
	Callback = function(value)
		pcall(function()
			Fps_Value = tonumber(value)
			setfpscap(Fps_Value)
		end)
	end
})

Tabs.Mode4:Button({
	Title = Translate("‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏•‡πá‡∏≠‡∏ö‡∏ö‡∏µ‡πâ", "Teleport to Lobby"),
	Desc = Translate("‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ó‡πÄ‡∏•‡∏û‡∏≠‡∏£‡πå‡∏ó", "Click to Teleport"),
	Callback = function()
		game:GetService("TeleportService"):Teleport(103754275310547, game.Players.LocalPlayer)
	end,
})

Section = Tabs.Mode2:Section({ 
	Title = "Section",
	TextXAlignment = "Left",
	TextSize = 25,
})
Section:SetTitle(Translate("‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ü‡∏≤‡∏£‡πå‡∏°", "‚öôÔ∏è Farm Setting"))

Toggle_BlackScreen = Tabs.Mode2:Toggle({
	Title = Translate("‡∏à‡∏≠‡∏î‡∏≥", "Black Screen"),
	Value = false,
	Callback = function(state)
		BlackScreen = state
		if BlackScreen == false then
			ShowText = nil
			if plrGui:FindFirstChild("SomtankBlackSgreen") then
				plrGui:FindFirstChild("SomtankBlackSgreen"):Destroy()
				wait(0.5)
				Camera.CameraType = Enum.CameraType.Custom
			end
		else
			if not plrGui:FindFirstChild("SomtankBlackSgreen") then
				NewScreenGui = Instance.new("ScreenGui", plrGui)
				NewCanvas = Instance.new("CanvasGroup", NewScreenGui)
				NewTextLabel = Instance.new("TextLabel", NewScreenGui)
				NewCanvas.Position = UDim2.new(0, 0, -0.2, 0)
				NewCanvas.Size = UDim2.new(2, 0, 2, 0)
				NewCanvas.BackgroundColor3 = Color3.new(0, 0, 0)
				NewTextLabel.Position = UDim2.new(0, 0, 0, 0)
				NewTextLabel.Size = UDim2.new(1, 0, 1, 0)
				NewTextLabel.BackgroundTransparency = 1
				NewTextLabel.TextColor3 = Color3.new(1, 1, 1)
				NewTextLabel.TextScaled = true
				NewTextLabel.ZIndex = 9
				NewTextLabel.Text = "Hello World"
				NewScreenGui.Name = "SomtankBlackSgreen"
				ShowText = NewTextLabel
			end
		end
	end
})

ZombieFarm = false
Toggle_ZombieFarm = Tabs.Mode2:Toggle({
	Title = Translate("‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ã‡∏≠‡∏°‡∏ö‡∏µ‡πâ", "Farm Zombie"),
	Value = false,
	Callback = function(state)
		ZombieFarm = state
		if state == false then
			wait(1)
			Camera.CameraType = Enum.CameraType.Custom
			workspace.Gravity = 190
		end
	end
})

FarmHeight = 4
Slider_FarmHeight = Tabs.Mode2:Slider({
	Title = Translate("‡∏£‡∏∞‡∏¢‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ü‡∏≤‡∏£‡πå‡∏°", "Height range on Zombies"),
	Value = {
		Min = 0,
		Max = 10,
		Default = 4,
	},
	Callback = function(value)
		FarmHeight = tonumber(value)
	end
})

AutoColletDropItem = false
Toggle_AutoColletDropItem = Tabs.Mode2:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏ó‡∏µ‡πà‡∏î‡∏£‡∏≠‡∏ö", "Auto Collet Drop Item"),
	Value = false,
	Callback = function(state)
		AutoColletDropItem = state
		if state == false then
			Camera.CameraType = Enum.CameraType.Custom
		end
	end
})

AutoOpenTheDoor = false
Toggle_AutoOpenTheDoor = Tabs.Mode2:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ï‡∏π", "Auto Open Door"),
	Value = false,
	Callback = function(state)
		AutoOpenTheDoor = state
	end
})

AutoSkipHelicopter = true
Toggle_AutoSkipHelicopter = Tabs.Mode2:Toggle({
	Title = Translate("‡∏™‡∏Ñ‡∏¥‡∏õ‡πÄ‡∏Æ‡∏•‡∏¥‡∏Ñ‡∏≠‡∏õ‡πÄ‡∏ï‡∏≠‡∏£‡πå", "Skip heli"),
	Value = true,
	Callback = function(state)
		AutoSkipHelicopter = state
	end
})

Section = Tabs.Mode2:Section({ 
	Title = "Section",
	TextXAlignment = "Left",
	TextSize = 25,
})
Section:SetTitle(Translate("üó∫ ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á", "üó∫ Auto Start"))

AutoCreateRoom = false
Toggle_AutoCreateRoom = Tabs.Mode2:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á", "Auto Start"),
	Value = false,
	Callback = function(state)
		AutoCreateRoom = state
	end
})

Slider_Cool_Down_Auto_Create = Tabs.Mode2:Slider({
	Title = Translate("‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á", "Delay in room creation"),
	Value = {
		Min = 0,
		Max = 60,
		Default = 10,
	},
	Callback = function(value)
		Cool_Down_Auto_Create = tonumber(value)
	end
})

Toggle_Only_allow_friends = Tabs.Mode2:Toggle({
	Title   = Translate("‡πÄ‡∏Ç‡πâ‡∏≤‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô", "Allow friends"),
	Desc    = Translate("‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô", "Only allow friends?"),
	Default = false,
	Callback = function(state) 
		print("Friend only:", state) end
})

Dropdown_PartySize = Tabs.Mode2:Dropdown({
	Title   = Translate("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ", "Party Size"),
	Values  = { "1","2","3","4","5","6","Infinity"},
	Value   = "1",
	Callback = function(option) 
		print("PlayerSize:", option) end
})

Dropdown_Choose_Map_Farm = Tabs.Mode2:Dropdown({
	Title = Translate("‡πÅ‡∏°‡∏û‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ü‡∏≤‡∏£‡πå‡∏°", "Map needs farming"),
	Values = Lobby_Data.Maps or {"School", "Sewers"},--"Sewers"
	Value = "School",
	Callback = function(option)
		print("Choose_Map_Farm "..option)
	end
})

Dropdown_Choose_Difficulty_Farm = Tabs.Mode2:Dropdown({
	Title = Translate("‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ü‡∏≤‡∏£‡πå‡∏°", "Difficulty to farm"),
	Values = Lobby_Data.Difficultys or {"Normal", "Hard", "Nightmare"},
	Value = "Normal",
	Callback = function(option) 
		print("Choose_Difficulty_Farm "..option)
	end
})

Dropdown_Choose_Mode_Farm = Tabs.Mode2:Dropdown({
	Title = Translate("‡πÇ‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ü‡∏≤‡∏£‡πå‡∏°", "Farm Mode"),
	Values = Lobby_Data.Modes or {"None","Campaign", "Endless"},
	Value = "None",
	Callback = function(option)
		print("Choose_Mode_Farm "..option)
	end
})

Section = Tabs.Mode2:Section({ 
	Title = "Section",
	TextXAlignment = "Left",
	TextSize = 25,
})
Section:SetTitle(Translate("üåü ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏•", "üåü Auto Use Skill"))

AutoUseSkill = false
Toggle_AutoUseSkill = Tabs.Mode2:Toggle({
	Title = Translate("‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏•", "Auto Use Skill"),
	Value = false,
	Callback = function(state)
		AutoUseSkill = state
	end
})

Tabs.Mode2:Divider()

WeaponSkill = false
Toggle_WeaponSkill = Tabs.Mode2:Toggle({
	Title = Translate("‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏•‡∏≠‡∏≤‡∏ß‡∏∏‡∏ò", "Weapon Skill"),
	Value = true,
	Callback = function(state)
		WeaponSkill = state
	end
})
PerkSkill = false
Toggle_PerkSkill = Tabs.Mode2:Toggle({
	Title = Translate("‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ", "Perk Skill"),
	Value = true,
	Callback = function(state)
		PerkSkill = state
	end
})

Z_Skill = false
Toggle_Z_Skill = Tabs.Mode2:Toggle({
	Title = Translate("‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏• - Z", "Use Skill Z"),
	Value = true,
	Callback = function(state)
		Z_Skill = state
	end
})
X_Skill = false
Toggle_X_Skill = Tabs.Mode2:Toggle({
	Title = Translate("‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏• - X", "Use Skill X"),
	Value = true,
	Callback = function(state)
		X_Skill = state
	end
})
C_Skill = false
Toggle_C_Skill = Tabs.Mode2:Toggle({
	Title = Translate("‡πÉ‡∏ä‡πâ‡∏™‡∏Å‡∏¥‡∏• - C", "Use Skill C"),
	Value = true,
	Callback = function(state)
		C_Skill = state
	end
})

Anti_AFK = false
Toggle_Anti_AFK = Tabs.Mode4:Toggle({
	Title = Translate("‡πÅ‡∏≠‡∏ô‡∏ï‡∏µ‡πâ‡πÄ‡∏≠‡πÄ‡∏≠‡∏ü‡πÄ‡∏Ñ", "Anti Afk"),
	Value = false,
	Callback = function(state)
		Anti_AFK = state
		if Anti_AFK then
			antiAfkConnection = game:GetService("Players").LocalPlayer.Idled:Connect(function()
				VirtualUser = game:GetService("VirtualUser")
				VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
				task.wait(1)
				VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
			end)
		else
			if antiAfkConnection then
				antiAfkConnection:Disconnect()
				antiAfkConnection = nil
			end
		end
	end
})


----------------------------- Loop Script ----------------------------

local function GetConnettion_Click(Button)
	task.spawn(function()
		for i, conn in ipairs(getconnections(Button.MouseButton1Click)) do
			if conn.Function then
				conn.Function()
			end
		end
	end)
end

local function CheckClass(textLabel, All_Class)
	if not textLabel or not textLabel:IsA("TextLabel") then
		return false
	end
	for _, className in ipairs(All_Class) do
		if textLabel.Text == className then
			return true
		end
	end
	return false
end

local function ScanNearZombie(Terget_Tag)
	if tonumber(game.PlaceId) == tonumber(103754275310547) then return end
	
	NearZombie, NearValue, Entities = nil, math.huge, workspace:WaitForChild("Entities")
	Start_Position_HMNRT = HMNRT.Position
	
	local function CheckIs(v)
		Resut = false
		if v and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Head") then
			HealthBar_Zombie = v:FindFirstChild("Head"):FindFirstChild("EntityHealth"):FindFirstChild("HealthBar"):FindFirstChild("Bar")
			if HealthBar_Zombie and HealthBar_Zombie.Size.X.Scale > 0 then
				Resut = true
			end
		end
		return Resut
	end
	
	for i,v in ipairs(Entities.Zombie:GetChildren()) do
		pcall(function()
			if not Terget_Tag then
				if CheckIs(v) and v:FindFirstChild("HumanoidRootPart") then
					Dis = (Start_Position_HMNRT - v.HumanoidRootPart.Position).Magnitude
					if Dis < NearValue then					
						NearZombie = v
						NearValue = Dis
					end
				end
			else
				if CheckIs(v) and v:FindFirstChild(Terget_Tag) then
					NearZombie = v
					NearValue = 0
				end
			end
		end)
	end
	if not NearZombie then
		for i,v in ipairs(Entities.Zombie:GetChildren()) do
			pcall(function()
				if CheckIs(v) and v:FindFirstChild("HumanoidRootPart") then
					Dis = (Start_Position_HMNRT - v.HumanoidRootPart.Position).Magnitude
					if Dis < NearValue then					
						NearZombie = v
						NearValue = Dis
					end
				end
			end)
		end
	end
	
	return NearZombie, NearValue
end

task.spawn(function()-- Weapon Rerole
	if tonumber(game.PlaceId) ~= tonumber(103754275310547) then return end
	
	GUI, Row1, Spin_Weapon_Frame = plrGui:FindFirstChild("GUI"), plrGui:WaitForChild("GUI"):WaitForChild("Hud"):WaitForChild("Left"):WaitForChild("Row1"), nil
	Open_Weapon = Row1:WaitForChild("Weapon"):WaitForChild("Shape"):WaitForChild("Fill")
	All_Weapon_Name = Lobby_Data.Weapons or {"BASEBALL", "AXES", "GUITAR", "DUAL GUN", "KATANA", "GREATSWORD"}
	
	repeat
		for i,v in ipairs(GUI:GetChildren()) do
			if v:IsA("ImageLabel") and v:FindFirstChild("Header") then
				Header = v:FindFirstChild("Header")
				if CheckClass(Header, All_Weapon_Name) then
					Spin_Weapon_Frame = v
				end
			end
		end
		wait(1)
	until Spin_Weapon_Frame ~= nil
	print("***** Set Weapon")
	
	weaponSpin_Remote = replicatedStorage.Packets:WaitForChild("WeaponSpin")
	
	while true do
		if Auto_Random_Find_Weapon or Auto_Random_Find_Weapon_Lucky then
			if Spin_Weapon_Frame.Visible == false then
				firesignal(Open_Weapon.MouseButton1Click)
				wait(0.5)
			end
			repeat
				if Spin_Weapon_Frame.Header and Choose_Target_Weapon and Spin_Weapon_Frame.Header.Text ~= Choose_Target_Weapon then
					print(Spin_Weapon_Frame.Header.Text.." ~= "..Choose_Target_Weapon)
					if Auto_Random_Find_Weapon_Lucky then
						weaponSpin_Remote:InvokeServer(Spin_Slot , true)
					elseif Auto_Random_Find_Weapon then
						weaponSpin_Remote:InvokeServer(Spin_Slot , nil, true)
					end
				end
				wait(0.5)
			until Auto_Random_Find_Weapon == false and Auto_Random_Find_Weapon_Lucky == false 
		end
		wait(1)
	end
end)

task.spawn(function()-- Perk Rerole
	if tonumber(game.PlaceId) ~= tonumber(103754275310547) then return end
	
	GUI, Row1, Spin_Perk_Frame = plrGui:FindFirstChild("GUI"), plrGui:WaitForChild("GUI"):WaitForChild("Hud"):WaitForChild("Left"):WaitForChild("Row1"), nil
	Open_Perks = Row1:WaitForChild("Perks"):WaitForChild("Shape"):WaitForChild("Fill")
	All_Perk_Name = Lobby_Data.Perks or {"BERSERKER", "HEALER", "FLAME", "CRITICAL", "UNDEAD", "VAMPIRE"}
	
	repeat
		for i,v in ipairs(GUI:GetChildren()) do
			if v:IsA("ImageLabel") and v:FindFirstChild("Header") then
				Header = v:FindFirstChild("Header")
				if CheckClass(Header, All_Perk_Name) then
					Spin_Perk_Frame = v
				end
			end
		end
		wait(1)
	until Spin_Perk_Frame ~= nil
	print("***** Set Perk ")
	
	PerkSpin_Remote = replicatedStorage.Packets:WaitForChild("PerkSpin")
	
	while true do
		if Auto_Random_Find_Perk or Auto_Random_Find_Perk_Lucky then
			if Spin_Perk_Frame.Visible == false then
				firesignal(Open_Perks.MouseButton1Click)
				wait(0.5)
			end
			repeat
				if Spin_Perk_Frame.Header and Choose_Target_Perk and Spin_Perk_Frame.Header.Text ~= Choose_Target_Perk then
					print(Spin_Perk_Frame.Header.Text.." ~= "..Choose_Target_Perk)
					if Auto_Random_Find_Perk_Lucky then
						PerkSpin_Remote:InvokeServer(Spin_Slot, true)
					elseif Auto_Random_Find_Perk then
						PerkSpin_Remote:InvokeServer(Spin_Slot , nil, true)
					end
				end
				wait(0.5)
			until Auto_Random_Find_Perk == false and Auto_Random_Find_Perk_Lucky == false 
		end
		wait(1)
	end
end)

task.spawn(function()-- Door
	if tonumber(game.PlaceId) == tonumber(103754275310547) then return end
	
	ReplicatedFirst = game:GetService("ReplicatedFirst")
	CollectionService = game:GetService("CollectionService")
	GameCore = ReplicatedFirst:WaitForChild("GameCore")
	Shared = GameCore:WaitForChild("Shared")
	ByteNetPackets = require(Shared:WaitForChild("ByteNetPackets"))

	while true do
		if AutoOpenTheDoor then
			repeat
				for _, door in ipairs(CollectionService:GetTagged("LEVELDOOR")) do
					if door and door:IsDescendantOf(workspace) then
						if not door:GetAttribute("activated") and not CollectionService:HasTag(door, "_doorAutoOpened") then
							ByteNetPackets.packets.activateDoor.send(door)
							CollectionService:AddTag(door, "_doorAutoOpened")
						end
					end
					wait(2)
				end
				wait(1)
			until AutoOpenTheDoor == false
		end
		wait(1)
	end
end)

task.spawn(function()-- Auto Skill
	if tonumber(game.PlaceId) == tonumber(103754275310547) then return end
	
	ByteNetReliable = replicatedStorage:WaitForChild("ByteNetReliable")
	MainScreen = plrGui:WaitForChild("MainScreen")	
	Perk_Bar = MainScreen:WaitForChild("LeftSide"):WaitForChild("PlayerHUD"):WaitForChild("Bars"):WaitForChild("Perk"):WaitForChild("Fill")
	AbilityHotbar = MainScreen:WaitForChild("AbilityHotbar")	
	AbilityHotbar1_Button = AbilityHotbar:WaitForChild("1")
	AbilityHotbar2_Button = AbilityHotbar:WaitForChild("2")
	AbilityHotbar3_Button = AbilityHotbar:WaitForChild("3")	
	Skill1_Bar = AbilityHotbar1_Button:WaitForChild("Cooldown"):WaitForChild("Frame")
	Skill2_Bar = AbilityHotbar2_Button:WaitForChild("Cooldown"):WaitForChild("Frame")
	Skill3_Bar = AbilityHotbar3_Button:WaitForChild("Cooldown"):WaitForChild("Frame")	
	UltBar_Button = MainScreen:WaitForChild("UltBar")
	UltBar = UltBar_Button:WaitForChild("Fill")
	
	SkillCoolDown = true

	local function Check_And_UseSkill()
		SkillCoolDown = true
		if SkillCoolDown and WeaponSkill and UltBar and UltBar.Size.X.Scale > 0.97 then
			firesignal(UltBar_Button.MouseButton1Click)
			SkillCoolDown = false
		end
		if SkillCoolDown and PerkSkill and Perk_Bar and Perk_Bar.Size.X.Scale > 0.97 then
			ByteNetReliable:FireServer(buffer.fromstring("\f"))
			SkillCoolDown = false
		end
		if SkillCoolDown and Z_Skill and Skill1_Bar and Skill1_Bar.Size.Y.Scale > 0.97 then
			firesignal(AbilityHotbar1_Button.MouseButton1Click)
			SkillCoolDown = false
		end
		if SkillCoolDown and X_Skill and Skill2_Bar and Skill2_Bar.Size.Y.Scale > 0.97 then
			firesignal(AbilityHotbar2_Button.MouseButton1Click)
			SkillCoolDown = false
		end
		if SkillCoolDown and C_Skill and Skill3_Bar and Skill3_Bar.Size.Y.Scale > 0.97 then
			firesignal(AbilityHotbar3_Button.MouseButton1Click)
			SkillCoolDown = false
		end
		if SkillCoolDown == false then
			wait(3)
		end
	end

	while true do
		if AutoUseSkill then
			repeat
				NearZombie, NearValue = ScanNearZombie()
				if NearValue < 15 then
					Check_And_UseSkill()
				end
				wait(1)
			until AutoUseSkill == false
		end
		wait(1)
	end
end)

task.spawn(function()-- Anti Ragdoll
	while true do
		if Anti_Ragdool then
			repeat
				pcall(function()
					if not character:GetAttribute("ragdoll") then
						character:SetAttribute("ragdoll", false)
					end
				end)
				wait(0.01)
			until Anti_Ragdool == false
		end
		wait(1)
	end
end)

AutoColletDropItem_Running = true
task.spawn(function()-- Auto Collet Item
	if tonumber(game.PlaceId) == tonumber(103754275310547) then return end
	DropItems, Tick_Wait = workspace:WaitForChild("DropItems"), 0
	while true do
		if AutoColletDropItem then
			repeat
				for i,v in ipairs(DropItems:GetChildren()) do
					if v:IsA("BasePart") and AutoColletDropItem and AutoColletDropItem_Running then
						pcall(function()
							Camera.CameraType = Enum.CameraType.Scriptable
							HMNRT.CFrame = CFrame.new(v.Position) * CFrame.new(0,1.5,0)
						end)						
					end
					wait()
				end
				Camera.CameraType = Enum.CameraType.Custom
				Tick_Wait = 0
				repeat
					Tick_Wait = Tick_Wait + 1
					wait(1)
				until AutoColletDropItem == false or Tick_Wait >= 5
			until AutoColletDropItem == false
		end
		wait(1)
	end
end)

task.spawn(function()-- Zombies Farm
	if tonumber(game.PlaceId) == tonumber(103754275310547) then return end
				
	Stage, WantHeli, Map, StuckZombies, Zombie_Stuts, Terget_Zombie_Tag = "none", 0, "School", 0, nil, nil
	RadioObjective, HeliObjective, generator = nil, nil, nil

	EndScreen = plrGui:WaitForChild("MainScreen_Sibling"):WaitForChild("EndScreen")
	replay_Button = EndScreen:WaitForChild("List"):WaitForChild("buttons"):WaitForChild("replay")
	
	if workspace:FindFirstChild("School") then
		Stage = "Wait_Call_Helicopter"
		Map = "School"
		warn("***** Set Win Stage on Shcool")
	elseif workspace:FindFirstChild("Sewers") then
		Map = "Sewers"
		Stage = "Wait_Start_Generator"
		warn("***** Set Win Stage on Sewers")
	elseif workspace:FindFirstChild("Carnival") then
		Map = "Carnival"
		Stage = "Wait_Boss_Spawn"
		warn("***** Set Win Stage on Carnival")
	end
	
	CountDown_GotoHeliCopter, RooftopBoss, copterRotor, CountDown_SewarEnd = false, nil, nil, false
	
	task.spawn(function()
		CreateSafeZone, Found_Boss, Found_BossRoom = false, false, false
		Entities = workspace:WaitForChild("Entities")
		task.spawn(function()
			while true do
				if Found_BossRoom then
					if not Found_Boss then
						for _, item in ipairs(Entities.Zombie:GetChildren()) do
							if item:IsA("Model") and item.PrimaryPart then
								if item.PrimaryPart.Size == Vector3.new(4,4,2) then
									Tag_Boss = Instance.new("RayValue", item)
									Tag_Boss.Name = "Carnival_Boss"
									Found_Boss = true
									break
								end
							end
						end
					end
				end
				if Found_Boss then
					break
				end
				wait(0.5)
			end
		end)
		while true do
			if Stage == "Wait_Boss_Spawn" and workspace:FindFirstChild("Carnival") then
				if workspace.Carnival:FindFirstChild("Rooms") and workspace.Carnival:FindFirstChild("Rooms"):FindFirstChild("CircusBossStage") then
					Found_BossRoom = true
					if not CreateSafeZone then
						SafeZonePart = Instance.new("Part", workspace)
						SafeZonePart.Anchored = true
						SafeZonePart.Size = Vector3.new(30,1,30)
						SafeZonePart.Position = Vector3.new(0,50,0)
						SafeZonePart.Color = Color3.new(0.427451, 0.0941176, 1)
						SafeZonePart.Transparency = 0.3
						CreateSafeZone = SafeZonePart
					end
					if not Found_Boss then
						ZombieFarm = false
						AutoColletDropItem_Running = false
						for i=1,50 do
							pcall(function()
								HMNRT.CFrame = CFrame.new(CreateSafeZone.Position) * CFrame.new(0,2,0)
							end)
							wait(0.1)
						end
						ZombieFarm = true
						AutoColletDropItem_Running = true
						task.wait(5)
					else
						Terget_Zombie_Tag = "Carnival_Boss"
					end
				end
			end
			task.wait(1)
		end
	end)
	task.spawn(function()--- CountDown_GotoHeliCopter
		while true do
			if CountDown_GotoHeliCopter then
				if RooftopBoss and RooftopBoss:FindFirstChild("Chopper") 
					and RooftopBoss:FindFirstChild("Chopper"):FindFirstChild("Body")
					and RooftopBoss:FindFirstChild("Chopper"):FindFirstChild("Body"):FindFirstChild("Main") then
					copterRotor = RooftopBoss:FindFirstChild("Chopper"):FindFirstChild("Body"):FindFirstChild("Main")
				end
				if not HeliObjective then
					for _,v in ipairs(workspace:GetDescendants()) do
						if v:IsA("BasePart") and v.Name == "HeliObjective" then
							HeliObjective = v
						end
					end
				end
				if copterRotor and HeliObjective then
					if IsNear(copterRotor.Position, HeliObjective.Position, 10) or AutoSkipHelicopter == true then
						print("********* Heli Copter Near CanGo!!")
						wait(5)
						ZombieFarm = false
						if HeliObjective then
							HeliProximityPrompt = HeliObjective:FindFirstChildOfClass("ProximityPrompt")
							for i=1,50 do
								pcall(function()
									HMNRT.CFrame = HeliObjective.CFrame
									fireproximityprompt(HeliProximityPrompt)
									print("Fire ProximityPrompt Get in Helicopter")
									wait(0.3)
								end)
							end
						end
						wait(1)
						if AutoSkipHelicopter == true then
							wait(7)
							for i=1,50 do
								pcall(function()
									HMNRT.CFrame = HeliObjective.CFrame
									fireproximityprompt(HeliProximityPrompt)
									print("Fire ProximityPrompt Get in Helicopter")
									wait(0.3)
								end)
							end
						end
						repeat
							print("Repeat Wait Heli Go")
							wait(0.3)
						until EndScreen.Visible == true
						wait(2)
						pcall(function()
							if getgenv().SendWebHook then return end
							getgenv().SendWebHook = true
							Stats_ = EndScreen:WaitForChild("List"):WaitForChild("stats")
							Coin = Stats_:WaitForChild("cashearned"):WaitForChild("v")
							Exp = Stats_:WaitForChild("expearned"):WaitForChild("v")
							PlayTime = Stats_:WaitForChild("playtime"):WaitForChild("v")
							Failure = EndScreen:WaitForChild("List"):WaitForChild("Title"):WaitForChild("Failure")
							if Failure.Enabled == true then
								sendWebhook(Coin.Text, Exp.Text, PlayTime.Text, false)
							else
								sendWebhook(Coin.Text, Exp.Text, PlayTime.Text, true)
							end
						end)
						wait(2)
						firesignal(replay_Button.MouseButton1Click)
					end
				end
			end
			wait(1)
		end
	end)
	task.spawn(function()--- CountDown_SewarEnd
		while true do
			if CountDown_SewarEnd then
				repeat
					wait(0.5)
				until EndScreen.Visible == true
				if EndScreen.Visible == true then
					wait(2)
					if EndScreen.Visible == true and Send_Webhook_IfEnd == true then
						if getgenv().SendWebHook then return end
						getgenv().SendWebHook = true
						pcall(function()
							Stats_ = EndScreen:WaitForChild("List"):WaitForChild("stats")
							Coin = Stats_:WaitForChild("cashearned"):WaitForChild("v")
							Exp = Stats_:WaitForChild("expearned"):WaitForChild("v")
							PlayTime = Stats_:WaitForChild("playtime"):WaitForChild("v")
							Failure = EndScreen:WaitForChild("List"):WaitForChild("Title"):WaitForChild("Failure")
							if Failure.Enabled == true then
								sendWebhook(Coin.Text, Exp.Text, PlayTime.Text, false)
							else
								sendWebhook(Coin.Text, Exp.Text, PlayTime.Text, true)
							end
						end)
					end
					wait(2)
					firesignal(replay_Button.MouseButton1Click)
				end
			end
			wait(1)
		end
	end)
	local function generatePath(position1, position2, steps)
		points = {}
		for i = 0, steps do
			alpha = i / steps
			point = position1:Lerp(position2, alpha)
			table.insert(points, point)
		end
		return points
	end
	task.spawn(function()--- ZombieStuts
		if getgenv().Zombie_Stuts then
			Zombie_Stuts = getgenv().Zombie_Stuts
		else
			Zombie_Stuts = Instance.new("Folder", replicatedStorage)
			Zombie_Stuts.Name = "Zombie_Stuts_Somtank"
			Zombie_Stuts.ChildAdded:Connect(function(child)
				if child:IsA("RayValue") then
					task.delay(5, function()
						if child.Parent == Zombie_Stuts then
							child:Destroy()
						end
					end)
				end
			end)
			getgenv().Zombie_Stuts = Zombie_Stuts
		end
	end)
	local function Check_Zombie()
		Entities = workspace:WaitForChild("Entities")
		task.spawn(function()
			for i,v in ipairs(Entities.Zombie:GetChildren()) do
				pcall(function()
					if v:FindFirstChildOfClass("AnimationController") and not v:FindFirstChild("Check_Set") then
						task.spawn(function()
							animController = v:FindFirstChild("AnimationController")
							animator = animController:WaitForChild("Animator")
							tag_Set = Instance.new("RayValue", v)
							tag_Set.Name = "Check_Set"
							animator.AnimationPlayed:Connect(function(track)
								tag = Instance.new("RayValue", v)
								if tostring(track.Animation.AnimationId) == "rbxassetid://71700377921769" then
									if not v:FindFirstChild("Chef_Tag") then										
										tag.Name = "Chef_Tag"
										return
									end
								elseif tostring(track.Animation.AnimationId) == "rbxassetid://94540545977068" then
									if not Zombie_Stuts:FindFirstChild("Toxic_Skill") then
										tag.Parent = Zombie_Stuts
										tag.Name = "Toxic_Skill"
										wait(3)
										tag:Destroy()
									end
								elseif tostring(track.Animation.AnimationId) == "rbxassetid://128869299564812" 
									or tostring(track.Animation.AnimationId) == "rbxassetid://109594358882292"
									or tostring(track.Animation.AnimationId) == "rbxassetid://99620434293511" then
									if not Zombie_Stuts:FindFirstChild("Boss_Attack") then
										tag.Parent = Zombie_Stuts
										tag.Name = "Boss_Attack"
										wait(3)
										tag:Destroy()
									end
								else
									tag:Destroy()
								end
							end)
						end)
					end
				end)
				wait()
			end
		end)
	end
	while true do
		if ZombieFarm then
			repeat
				task.wait(3)
				if Stage ~= "WantWin" then
					pcall(function()
						Check_Zombie()
						repeat
							NearZombie, NearValue = ScanNearZombie(Terget_Zombie_Tag)
							if NearZombie then
								if ZombieFarm and NearZombie:FindFirstChild("HumanoidRootPart") and NearZombie:FindFirstChild("Head") then
									HealthBar_Zombie = NearZombie:FindFirstChild("Head"):FindFirstChild("EntityHealth"):FindFirstChild("HealthBar"):FindFirstChild("Bar")
									if HealthBar_Zombie and HealthBar_Zombie.Size.X.Scale > 0 then
										StuckZombies, Y_align, Z_align, Old_Health, SteamSniping = 0, 0, -3, HealthBar_Zombie.Size.X.Scale, 0	
										workspace.Gravity = 0
										repeat
											if Terget_Zombie_Tag == "Carnival_Boss" then
												if Zombie_Stuts:FindFirstChild("Boss_Attack") then
													Y_align = 40
												else
													Y_align = 0
												end
											end
											pcall(function()
												Old_Health = HealthBar_Zombie.Size.X.Scale												
												HMNRT.CFrame = NearZombie.HumanoidRootPart.CFrame * CFrame.new(0,FarmHeight + Y_align, Z_align)
												HMNRT.CFrame = CFrame.lookAt(HMNRT.Position, NearZombie.HumanoidRootPart.Position)
												if HealthBar_Zombie.Size.X.Scale == Old_Health then
													SteamSniping = SteamSniping + 3
													if SteamSniping > 400 then
														game:GetService("TeleportService"):Teleport(103754275310547, game.Players.LocalPlayer)
													end
												else
													SteamSniping = 0
												end
											end)
											StuckZombies = StuckZombies + 0.05
											wait(0.0025)
											HMNRT.Anchored = true
											wait(0.0025)
											NewScan_NearZombie = ScanNearZombie(Terget_Zombie_Tag)
											if NewScan_NearZombie ~= NearZombie then
												StuckZombies = 100
											end
											HMNRT.Anchored = false
										until HealthBar_Zombie.Size.X.Scale <= 0 or HealthBar_Zombie == nil
											or ZombieFarm == false or NearZombie == nil or StuckZombies > 1
										StuckZombies = 0
										workspace.Gravity = 190
									end
								end
							end
							wait(0.001)
						until #Entities.Zombie:GetChildren() <= 1 or ZombieFarm == false
					end)
				end
				if ZombieFarm then
					if Map == "Sewers" then
						if Stage == "Wait_Start_Generator" then
							if generator == nil then
								if workspace:FindFirstChild("Sewers") 
									and workspace:FindFirstChild("Sewers"):FindFirstChild("Rooms") 
									and workspace:FindFirstChild("Sewers"):FindFirstChild("Rooms"):FindFirstChild("BossRoom") 
									and workspace:FindFirstChild("Sewers"):FindFirstChild("Rooms"):FindFirstChild("BossRoom"):FindFirstChild("generator") 
									and workspace:FindFirstChild("Sewers"):FindFirstChild("Rooms"):FindFirstChild("BossRoom"):FindFirstChild("generator"):FindFirstChild("gen")
									and  workspace:FindFirstChild("Sewers"):FindFirstChild("Rooms"):FindFirstChild("BossRoom"):FindFirstChild("generator"):FindFirstChild("gen"):FindFirstChildOfClass("ProximityPrompt") then
									generator = workspace:FindFirstChild("Sewers"):FindFirstChild("Rooms"):FindFirstChild("BossRoom"):FindFirstChild("generator"):FindFirstChild("gen")
								end
							else
								for i=1,10 do
									HMNRT.CFrame = CFrame.new(generator.Position) * CFrame.new(0,3,0)
									wait(0.5)
									fireproximityprompt(generator:FindFirstChildOfClass("ProximityPrompt"))
								end
								wait(0.5)
								CountDown_SewarEnd = true
							end
						end
					elseif Map == "School" then
						if Stage == "Wait_Call_Helicopter" then
							if workspace:FindFirstChild("School") 
								and workspace:FindFirstChild("School"):FindFirstChild("Rooms") 
								and workspace:FindFirstChild("School"):FindFirstChild("Rooms"):FindFirstChild("RooftopBoss") then
								RooftopBoss = workspace:FindFirstChild("School"):FindFirstChild("Rooms"):FindFirstChild("RooftopBoss")
								if RooftopBoss and #Entities.Zombie:GetChildren() <= 1 then
									for _,v in ipairs(RooftopBoss:GetDescendants()) do
										if v:IsA("BasePart") and v.Name == "RadioObjective" then
											for i=1,10 do
												pcall(function()
													HMNRT.CFrame = v.CFrame
													wait(0.5)
													fireproximityprompt(v:FindFirstChildOfClass("ProximityPrompt"))
												end)
											end
										end
									end
									wait(0.5)
									repeat
										wait(1)
									until #Entities.Zombie:GetChildren() > 1 or #Entities.Phantom:GetChildren() > 1 
									CountDown_GotoHeliCopter = true
								end
							end
						end
					end
				end				
			until ZombieFarm == false
		end
		wait(1)
	end
end)

task.spawn(function()-- Auto Kill
	if tonumber(game.PlaceId) == tonumber(103754275310547) then return end
	
	ByteNetReliable = replicatedStorage:WaitForChild("ByteNetReliable")
	
	--Shared = ReplicatedFirst.GameCore.Shared		
	
	task.spawn(function()--Noramal Auto Kill
		local function makeBuffer(idx)
			b = buffer.create(3)
			buffer.writeu8(b, 0, 8)
			buffer.writeu8(b, 1, idx)
			buffer.writeu8(b, 2, 1)
			return b
		end
		local function fireAbility(idx, label)
			now = workspace:GetServerTimeNow()
			buf = makeBuffer(idx)
			ByteNetReliable:FireServer(buf, {now})
		end
		local function getNearestZombie1()
			nearest, dist = nil, 6
			zombieFolder = workspace:FindFirstChild("Entities") and workspace.Entities:FindFirstChild("Zombie")
			if not zombieFolder then return nil end
			for _, mob in ipairs(zombieFolder:GetChildren()) do
				pcall(function()
					mobPart = mob:IsA("Model") and mob.PrimaryPart or mob:FindFirstChildWhichIsA("BasePart")
					if mobPart then
						d = (mobPart.Position - HMNRT.Position).Magnitude
						if d <= dist then
							nearest, dist = mob, d
						end
					end
				end)
			end
			return nearest
		end
		myIndexes = {1,4,8}
		while true do
			if AutoKill then
				--print("AutoKill == true")				
				repeat
					mob = getNearestZombie1()
					if mob then
						for _, idx in ipairs(myIndexes) do
							fireAbility(idx, "Ability " .. idx)
							task.wait(0.01)
						end
					end
					task.wait(0.01)
				until AutoKill == false
			end
			wait(1)
		end
	end)
	
	task.spawn(function()--Fast Auto Kill		
		local function getNearestZombie2()	
			nearest, dist = nil, 7
			zombieFolder = workspace:FindFirstChild("Entities") and workspace.Entities:FindFirstChild("Zombie")
			if not zombieFolder then return nil end
			for _, mob in ipairs(zombieFolder:GetChildren()) do
				pcall(function()
					mobPart = mob:IsA("Model") and mob.PrimaryPart or mob:FindFirstChildWhichIsA("BasePart")
					if mobPart then
						Dis = (mobPart.Position - HMNRT.Position).Magnitude
						if Dis <= dist then
							nearest, dist = mob, Dis
						end
					end
				end)				
			end
			return nearest
		end
		while true do
			if ZombieFarm or Fast_AutoKill then
				repeat
					--print("Fast_AutoKill == true")
					mob = getNearestZombie2()
					if mob then
						GetServerTimeNow = workspace:GetServerTimeNow()						
						args_Killing_Speed = {buffer.fromstring("\b\004\001\b\b\002"),{
								(GetServerTimeNow - Speed_To_Kill_Aura),
								(GetServerTimeNow + Speed_To_Kill_Aura)}}
						ByteNetReliable:FireServer(unpack(args_Killing_Speed))
					end
					task.wait(0.01)
				until ZombieFarm == false and Fast_AutoKill == false
			end
			wait(1)
		end
	end)
	
end)

Tabs.Mode2:Divider()

Window:OnDestroy(function()
	ScreenGui:Destroy()
	ScriptIsRunning = false
	getgenv().SomtankIsRun = false
end)

local elements = {
	Toggle_ZombieFarm = Toggle_ZombieFarm,
	Slider_FarmHeight = Slider_FarmHeight,
	Toggle_AutoColletDropItem = Toggle_AutoColletDropItem,
	Toggle_AutoOpenTheDoor = Toggle_AutoOpenTheDoor,
	Toggle_AutoSkipHelicopter = Toggle_AutoSkipHelicopter,
	Toggle_AutoCreateRoom = Toggle_AutoCreateRoom,
	Slider_Cool_Down_Auto_Create = Slider_Cool_Down_Auto_Create,
	Toggle_AutoUseSkill = Toggle_AutoUseSkill,
	Toggle_WeaponSkill = Toggle_WeaponSkill,
	Toggle_Z_Skill = Toggle_Z_Skill,
	Toggle_X_Skill = Toggle_X_Skill,
	Toggle_C_Skill = Toggle_C_Skill,
	Slider_Fps_Value = Slider_Fps_Value,
	Toggle_BlackScreen = Toggle_BlackScreen,
	Toggle_Auto_Claim_Achievement = Toggle_Auto_Claim_Achievement,
	Toggle_Auto_Claim_Quest = Toggle_Auto_Claim_Quest,
	Toggle_Auto_Accept_Secret_Quest = Toggle_Auto_Accept_Secret_Quest,
	Button_SendWebHook_End = Button_SendWebHook_End,
	Input_User_Webhook = Input_User_Webhook,
	Toggle_Send_Webhook_IfEnd = Toggle_Send_Webhook_IfEnd,
	Slider_Spin_Slot = Slider_Spin_Slot,
	Toggle_Anti_AFK = Toggle_Anti_AFK,
	Dropdown_PartySize = Dropdown_PartySize,
	Toggle_Only_allow_friends = Toggle_Only_allow_friends,
	Dropdown_Choose_Map_Farm = Dropdown_Choose_Map_Farm,
	Dropdown_Choose_Difficulty_Farm = Dropdown_Choose_Difficulty_Farm,
	Dropdown_Choose_Mode_Farm = Dropdown_Choose_Mode_Farm,
	Toggle_PerkSkill = Toggle_PerkSkill,
	Toggle_Anti_Ragdool = Toggle_Anti_Ragdool,
	Slider_Speed_To_Kill_Aura = Slider_Speed_To_Kill_Aura
}

for name, element in pairs(elements) do
	myConfig:Register(name, element)
end
myConfig:Load()

local configs = myConfig:Get() or {}
for name, value in pairs(configs) do
	local element = myConfig.Elements[name]
	if element and value ~= nil then
		element.Value = value
		print(name .. " loaded as " .. tostring(value))
	end
end

local function LowGraphic()
	pcall(function()
		Lighting.GlobalShadows = false
		Lighting.FogEnd = 9999
		Lighting.FogStart = 9999
		settings().Rendering.QualityLevel = 1
		task.spawn(function()
			for i,v in pairs(game:GetDescendants()) do
				if v:IsA("BasePart") then
					v.Material = "Plastic"
					v.Reflectance = 0
					v.BackSurface = "SmoothNoOutlines"
					v.BottomSurface = "SmoothNoOutlines"
					v.FrontSurface = "SmoothNoOutlines"
					v.LeftSurface = "SmoothNoOutlines"
					v.RightSurface = "SmoothNoOutlines"
					v.TopSurface = "SmoothNoOutlines"
				elseif v:IsA("Decal") then
					v.Transparency = 1
				elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
					v.Lifetime = NumberRange.new(0)
				end
				wait()
			end
		end)
		task.spawn(function()
			for i,v in pairs(Lighting:GetDescendants()) do
				if v:IsA("PostEffect") then
					v.Enabled = false
				end
				wait()
			end
		end)
		task.spawn(function()
			workspace.DescendantAdded:Connect(function(child)
				task.spawn(function()
					if child:IsA('ForceField') or child:IsA('Sparkles') or child:IsA('Smoke') or child:IsA('Fire') or child:IsA('Beam') then
						RunService.Heartbeat:Wait()
						child:Destroy()
					end
				end)
			end)
		end)
	end)
end

local function Check_BlackSgreen()
	if not plrGui:FindFirstChild("SomtankBlackSgreen") then
		NewScreenGui = Instance.new("ScreenGui", plrGui)
		NewCanvas = Instance.new("CanvasGroup", NewScreenGui)
		NewTextLabel = Instance.new("TextLabel", NewScreenGui)
		NewCanvas.Position = UDim2.new(0, 0, -0.2, 0)
		NewCanvas.Size = UDim2.new(2, 0, 2, 0)
		NewCanvas.BackgroundColor3 = Color3.new(0, 0, 0)
		NewTextLabel.Position = UDim2.new(0, 0, 0, 0)
		NewTextLabel.Size = UDim2.new(1, 0, 1, 0)
		NewTextLabel.BackgroundTransparency = 1
		NewTextLabel.TextColor3 = Color3.new(1, 1, 1)
		NewTextLabel.TextScaled = true
		NewTextLabel.ZIndex = 9
		NewTextLabel.Text = "Hello World"
		NewScreenGui.Name = "SomtankBlackSgreen"
		ShowText = NewTextLabel
	end
end

task.spawn(function()
	if getgenv().Setting and getgenv().Setting.Farm_Mode then
		if getgenv().Setting.Farm_Mode == "Kai_tan" then
			pcall(function()
				print("Set Kaitan Mode 1")
				AutoCreateRoom = true
				ZombieFarm = true
				AutoColletDropItem = true
				AutoOpenTheDoor = true
				AutoUseSkill = true
				WeaponSkill = true
				PerkSkill = true
				Z_Skill = true
				X_Skill = true
				C_Skill = true
				ScriptIsRunning = false
				BlackScreen = true
				InitNoEffect()
				setfpscap(15)
				Check_BlackSgreen()
				Window:Close()
				LowGraphic()
			end)
		elseif getgenv().Setting.Farm_Mode == "Kai_tan2" then
			pcall(function()
				print("Set Kaitan Mode 2")
				AutoCreateRoom     = true
				ZombieFarm         = true
				AutoColletDropItem = true
				AutoOpenTheDoor    = true
				AutoUseSkill       = true
				WeaponSkill        = false
				PerkSkill          = true
				Z_Skill            = false
				X_Skill            = false
				C_Skill            = false
				ScriptIsRunning = false
				BlackScreen = true
				InitNoEffect()
				setfpscap(15)
				Check_BlackSgreen()
				Window:Close()
				LowGraphic()
			end)
		end
	end
end)

if getgenv().Setting then
	jsonData = HttpService:JSONEncode(getgenv().Setting)
end

Somtank_ScriptKey = ""
if getgenv().Somtank_ScriptKey then
	Somtank_ScriptKey = getgenv().Somtank_ScriptKey
end

if jsonData then
	queue_on_teleport([[
      local HttpService = game:GetService("HttpService")
      local Setting = ']] .. jsonData .. [['
      getgenv().Setting = HttpService:JSONDecode(Setting)
      getgenv().Somtank_ScriptKey = ']]..Somtank_ScriptKey..[['
      loadstring(game:HttpGet(']]..Q_on_url..[['))()
    ]])
end

lastPos, afkTime, afkThreshold, StuckTime = HMNRT.Position, 0, 180, 0

while true do
	pcall(function()
		if ShowText then
			if tonumber(game.PlaceId) == tonumber(103754275310547) then
				ShowText.Text = "> Lobby <"
			else
				ShowText.Text = "> Farming <"
			end
		end
		StuckTime = StuckTime + 2
		if StuckTime >= 1080 then
			game:GetService("TeleportService"):Teleport(103754275310547, game.Players.LocalPlayer)
			wait(10)
		end
		if tonumber(game.PlaceId) == tonumber(103754275310547) then
			pcall(function()
				EndScreen = plrGui:FindFirstChild("MainScreen_Sibling"):FindFirstChild("EndScreen")
				if EndScreen.Visible == true and Send_Webhook_IfEnd == true then
					if getgenv().SendWebHook then return end
					getgenv().SendWebHook = true
					Stats_ = EndScreen:WaitForChild("List"):WaitForChild("stats")
					Coin = Stats_:WaitForChild("cashearned"):WaitForChild("v")
					Exp = Stats_:WaitForChild("expearned"):WaitForChild("v")
					PlayTime = Stats_:WaitForChild("playtime"):WaitForChild("v")
					Failure = EndScreen:WaitForChild("List"):WaitForChild("Title"):WaitForChild("Failure")
					if Failure.Enabled == true then
						sendWebhook(Coin.Text, Exp.Text, PlayTime.Text, false)
					else
						sendWebhook(Coin.Text, Exp.Text, PlayTime.Text, true)
					end
				end
			end)
		end
		task.wait(2)
		if (HMNRT.Position - lastPos).magnitude < 0.6 then
			afkTime += 1.5
			if ZombieFarm and afkTime >= afkThreshold then
				if tonumber(game.PlaceId) ~= tonumber(103754275310547) then
					game:GetService("TeleportService"):Teleport(103754275310547, game.Players.LocalPlayer)
					wait(10)
				end
			end
		else
			afkTime = 0
			lastPos = HMNRT.Position
		end
		if ScriptIsRunning then
			myConfig:Save()
		end
	end)
end
